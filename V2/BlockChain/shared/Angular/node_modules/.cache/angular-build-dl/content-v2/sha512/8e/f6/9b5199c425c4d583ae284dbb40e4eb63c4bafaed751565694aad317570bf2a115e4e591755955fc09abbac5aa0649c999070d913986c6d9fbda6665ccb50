{"version":3,"sources":["webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/services/api.service.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/services/firebase.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","firebaseService","isLogout","logout","emit","selector","templateUrl","styleUrls","providers","AppComponent","api","movies","title","getMovies","getAllMovies","subscribe","data","error","console","log","environment","production","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ApiService","http","baseurl","httpHeaders","get","headers","providedIn","isSignedIn","localStorage","getItem","email","password","signup","isLoggedIn","signin","FirebaseService","firebaseAuth","signInWithEmailAndPassword","then","res","setItem","JSON","stringify","user","createUserWithEmailAndPassword","signOut","removeItem","AppModule","initializeApp","declarations","imports","bootstrap","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\n\n//From ex\nimport { ApiService } from '../services/api.service'; \n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  //From Ex\n  providers: [ApiService]\n})\nexport class HomeComponent implements OnInit {\n  \n  //Logic for handeling event of a logout\n  @Output() isLogout = new EventEmitter<void>()\n  constructor(public firebaseService: FirebaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  //Logout method\n  logout(){\n    this.firebaseService.logout()\n    this.isLogout.emit()\n  }\n}\n\n//This section deals with pullling data from backend. This example just loads random movies\nexport class AppComponent {\n  movies = [{title: 'Titanic'}];\n\n  constructor(private api:ApiService){\n    this.getMovies();\n\n  }\n  //Function for getting it from API\n  //So confusing\n  getMovies = () => {\n\n    this.api.getAllMovies().subscribe(\n      data => {\n        this.movies = data\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n}\n","<!--  -->\n<h2>Movie Listing Test!</h2>\n<ul>\n  <!-- *ngFor is for accessing component data in angular -->\n  <!--\n  <li *ngFor=\"let movie of movies\">\n    <h1>{{movie.title}}</h1>\n  </li>\n-->\n</ul>\n\n<!-- Added from previous example -->\n<button (click)=\"logout()\">Logout</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \n  firebase: {\n    apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n    authDomain: \"helius-70808.firebaseapp.com\",\n    projectId: \"helius-70808\",\n    storageBucket: \"helius-70808.appspot.com\",\n    messagingSenderId: \"475929370500\",\n    appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n    measurementId: \"G-SWCJ32CMDT\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //URL of django sever\n  baseurl = 'http://127.0.0.1:8000';\n\n  //Headers for HTTP\n  httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient) { }\n\n  //function for getting movie data from django\n  getAllMovies(): Observable<any>{\n    return this.http.get(this.baseurl + '/movies/', \n    {headers: this.httpHeaders});\n\n  }\n}\n","<!--This is the main HTML of the Login Page-->\n<div>\n  <h1>Welcome to Helius!</h1>\n</div>\n\n<!--This is from movie example for testing\n\nTODO\n- not reading the data from django\n-->\n\n<div>\n  <h2>Movie Listing Test!</h2>\n<ul>\n  <!-- *ngFor is for accessing component data in angular -->\n  <li *ngFor=\"let movie of movies\">\n    <h1>{{movie.title}}</h1>\n  </li>\n</ul>\n</div>\n\n\n<!--Sign up functionality\nTODO\n- not working at all\n-->\n\n<!-- \n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign Up</h2>\n  <input type=\"text\" #emailSignup/>\n  <input type=\"text\" #passwordSignup/>\n  <button (click)=\"onSignup(emailSignup.value,passwordSignup.value)\">Sign Up</button>\n</div>\n-->\n<!--Sign in functionality\nTODO\n- password not hidden\n-->\n\n<hr>\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign In</h2>\n  <input type=\"text\" value=\"test@helius.com\" #email/>\n  <input type=\"text\" value=\"123456\" #password/>\n  <button (click)=\"onSignin(email.value,password.value)\">Sign In</button>\n</div>\n\n\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogout()\"></app-home>\n","import { Component, OnInit } from '@angular/core';\n\n//These are sevices we use to connect to stuff\n//Taken from the services folder\nimport { FirebaseService } from './services/firebase.service';\nimport { ApiService } from './services/api.service'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ApiService]\n})\n\nexport class AppComponent implements OnInit {\n\n  //Variable declerations\n  title = 'helius';\n  isSignedIn = false;\n  movies = [{title: 'Titanic'}];\n\n  //constructor(private api:ApiService){ \n  //  ;this.getMovies()\n\n  //}\n\n     //TODO\n    //- Cant target services file\n  getMovies = () => {\n\n    \n    this.api.getAllMovies().subscribe(\n      data => {\n        this.movies = data\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n  //Initializes firebase\n  constructor(public firebaseService : FirebaseService, private api:ApiService ){}\n  ngOnInit(){\n\n    //Checking if user is signed in\n    if(localStorage.getItem('user')!== null)\n    this.isSignedIn = true\n    else\n    this.isSignedIn = false\n\n    ;this.getMovies()\n  }\n\n  //Handles signup functionality\n  async onSignup(email: string, password:string){\n    await this.firebaseService.signup(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Handles signin functionality\n  async onSignin(email: string, password:string){\n    await this.firebaseService.signin(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Logout functionality\n  handleLogout(){\n    this.isSignedIn = false\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn = false;\n  constructor(public firebaseAuth: AngularFireAuth) { }\n\n  //Authenticating with firebase email and login\n  async signin(email : string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  //Signining up with firebase auth\n  async signup(email : string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//Added for firebase use\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { HomeComponent } from './home/home.component';\nimport { FirebaseService } from './services/firebase.service';\n\n//Added fro htttp connections connection\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    //Firebase setup\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n      authDomain: \"helius-70808.firebaseapp.com\",\n      projectId: \"helius-70808\",\n      storageBucket: \"helius-70808.appspot.com\",\n      messagingSenderId: \"475929370500\",\n      appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n      measurementId: \"G-SWCJ32CMDT\"\n    }),\n\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n\n    //For HTTP connecting\n    HttpClientModule\n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}