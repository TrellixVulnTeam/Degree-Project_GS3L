{"version":3,"sources":["./src/app/shared/rest-api.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/app/services/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/market/market.component.ts","./src/app/market/market.component.html","./src/app/history/history.component.ts","./src/app/history/history.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Chain } from '../shared/chain';\nimport { Production } from '../shared/production';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\nexport interface transaction {\n  author: String;\n  buyer:  String;\n  seller: String;\n  quantity: number;\n}\n\nexport interface bid {\n  uid:  String;\n  Post_Id: String;\n  Amount: number;\n}\n\nexport interface port {\n  node_address: String;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestApiService {\n  \n  //Define API urls\n  serverURL = 'http://localhost:8003';\n  weatherURLV5 = 'http://localhost:8004';\n  v5URL = 'http://localhost:8003';\n  v4URL = 'http://localhost:8000';\n\n  //Hardcodded testing data\n  testPost = {\n    author: \"Marko\",\n    buyer:  \"Marko\",\n    seller: \"Yash\",\n    quantity: \"420\",\n  }\n\n  testBid = {\n    uid:  \"NOtcKxDvogdK9JbDTacpUbb1EiC2\",\n    Post_Id: \"444\",\n    Amount: 15,\n  }\n\n  //this format works for json posts\n  testProd = {\n    author: \"NOtcKxDvogdK9JbDTacpUbb1EiC2\",\n  }\n\n  testUid = {\n    author: \"NOtcKxDvogdK9JbDTacpUbb1EiC2\",\n  }\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    })\n  }\n\n  \n    // HttpClient API get() method => Fetch chain data\n    getChain(): Observable<Chain> {\n      return this.http.get<Chain>(this.serverURL + '/chain')\n      .pipe(\n        retry(1),\n        catchError(this.handleError)\n      )\n    }\n\n    //Sends userID to production server\n    postProduction(){\n      //we pass this a premade object from above\n      return this.http.post(this.weatherURLV5 + '/solar_production', this.testProd)\n      //TODO\n      //Returns or displays 2 production datas\n    }\n\n    //Posts dummy data to the chain\n    postChain(object: transaction): any {\n      this.http.post<Chain>(this.serverURL + '/new_transaction', object)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      })\n    }\n\n    //Connect to other networks\n    connectToChain(value: port): any {\n      this.http.post(this.v5URL + '/register_with', value)\n      .toPromise()\n      .then(data => {\n        console.log(data);\n      })\n    }\n    \n    //get the Consumption from the weather server\n    ///THIS IS BIDDDDDDDD\n    postConsumption(){\n      return this.http.post(this.weatherURLV5 + '/solar_consumption', this.testProd)\n    }\n\n    postBid(bid: bid){\n      return this.http.post(this.weatherURLV5 + '/validate_bid', bid)\n    }\n\n    //get the surplus from the server from the weather server\n    postSurplus(){\n      return this.http.post(this.weatherURLV5 + '/surplus', this.testUid)\n    }\n\n    //get the surplus from the server from the weather server\n    // postBid(){\n      \n    //   let bid = {\n    //     uid:  \"mFSXDDIf4rc0IfIYD6JVGAbmiaf1\",\n    //     Post_Id: \"444\",\n    //     Amount: 15,\n    //   }\n    //   return this.http.post(this.weatherURLV5 + '/solar_consumption', bid)\n    // }\n\n\n    // Error handling \n  handleError(error: { error: { message: string; }; status: any; message: any; }) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n }\n\n  /////////////////////////FOR DEVELOPMENT AND TESTING //////////////////////////////////////////\n\n  //FOR DEBUGGING\n  //Gets the solar production data in an array\n  // getProduction(): Observable<Production> {\n  //   return this.http.get<Production>(this.weatherURL + '/solar_production')\n  // }\n\n\n  /////////////////////////END DEVELOPMENT AND TESTING //////////////////////////////////////////\n}\n","//This file handles most of the logic throughout the compnent\n\n//Imports\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Observable } from 'rxjs';\n//From ex\nimport { ApiService } from '../services/api.service'; \n// from https://blog.logrocket.com/creating-a-crud-firebase-documents-in-angular/\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\n//import { FirebaseUser } from '@angular/fire/auth/User';\n\nimport { element } from 'protractor';\n//import { Users } from '../services/user.model';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  //From Ex\n  providers: [ApiService]\n})\nexport class HomeComponent implements OnInit {\n\n  isDarkTheme:boolean = true;\n\n  //Flags for where you are in the app\n  public Home:boolean = false;\n  public Profile:boolean = false;\n  public Wallet:boolean = false;\n  public History:boolean = false;\n  public Market:boolean = true;\n\n  //TESTING: UID accessing\n  public uid: string | undefined;\n\n  //TESTING\n  public currentUser: firebase.User | any;\n\n  //For reading firestore data\n  //Each \"collection\" needs its own observable!!!!\n  Users: Observable<any[]>;\n \n  //Logic for handeling event of a logout\n  @Output() isLogout = new EventEmitter<void>()\n\n\n  //Initializes firebase and all its services\n  constructor(\n    public firebaseService : FirebaseService,\n    private api : ApiService, \n    public firestore : AngularFirestore,\n    public auth: AngularFireAuth ) {\n    \n      //Firestore reading logic of User_Info\n      this.Users = this.firestore.collection<any>('User_Info').valueChanges();\n      \n      //TESTING\n      //Get current user\n      auth.authState.subscribe(user => {\n        this.currentUser = this.auth.currentUser;\n        console.log(user);\n      });\n    }\n\n      \n  //Logic to be executed on initilization of component\n  ngOnInit(): void {\n\n    //TESTING\n    //this.uid = this.auth.currentUser\n    //console.log(uid)\n  }\n\n  //Logout method\n  logout(){\n    this.firebaseService.logout()\n    this.isLogout.emit()\n  }\n\n  //For choosing which component will be displayed from the nav bar\n  showHome(){\n    this.Profile = false;\n    this.Wallet = false;\n    this.History = false;\n    this.Market = false;\n  }\n  showProfile(){\n    this.Profile = !this.Profile;\n    this.Wallet = false;\n    this.History = false;\n    this.Market = false;\n  }\n  showWallet(){\n    this.Wallet = !this.Wallet;\n    this.Profile = false;\n    this.History = false;\n    this.Market = false;\n  }\n  showHistory(){\n    this.History = !this.History;\n    this.Profile = false;\n    this.Wallet = false;\n    this.Market = false;\n  }\n  showMarket(){\n    this.Market = !this.Market;\n    this.Profile = false;\n    this.Wallet = false;\n    this.History = false;\n  }\n}\n\n//This section deals with pullling data from backend django\n//Non functional but leaving for reference \n/*\nexport class AppComponent {\n  movies = [{title: 'Titanic'}];\n\n  constructor(private api:ApiService){\n    this.getMovies();\n\n  }\n  //Function for getting it from API\n  //So confusing\n  getMovies = () => {\n\n    this.api.getAllMovies().subscribe(\n      data => {\n        this.movies = data\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n}\n*/\n","<!-- Once user has logegd in, they see this home page  -->\n\n<!-- CSS Style  -->\n<style>\n  button {\n    display: block;\n  }\n\n  .center {\n  text-align: center;\n  }\n\n  </style>\n<!-- End of CSS Style  -->\n\n<!-- Navigation Toolbar  -->\n<mat-toolbar style=\"background-color:DodgerBlue;\" [ngClass]=\"{'dark-theme-mode':isDarkTheme}\">\n\n  <!-- Ttile based on logged in placeholder user  -->\n  <span>HELIUS V5</span>\n  \n  <!-- Fix getting Name for the title of the Nav Bar -->\n  <!-- <span *ngIf=\"let name of currentUser | async\">{{name.email}}</span> -->\n<button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n  <mat-icon>menu</mat-icon>\n  \n\n</button><mat-menu #menu=\"matMenu\" [ngClass]=\"{'dark-theme-mode':isDarkTheme}\">\n  <button  mat-menu-item (click)=\"showHome()\" class=\"btn home\">Home</button>\n  <button mat-menu-item (click)=\"showProfile()\" class=\"btn profile\">Profile</button>\n  <button mat-menu-item (click)=\"showWallet()\" class=\"btn wallet\">Wallet</button>\n  <button mat-menu-item (click)=\"showHistory()\"class=\"btn history\">History</button>\n  <button mat-menu-item (click)=\"showMarket()\"class=\"btn market\">Market</button>\n  <button mat-menu-item (click)=\"logout()\">Logout</button>\n  \n</mat-menu>\n<span style=\"flex:auto\"></span>\n<mat-slide-toggle color=\"primary\">Dark Theme</mat-slide-toggle>\n</mat-toolbar>\n <!-- End of Navigation Toolbar  -->\n\n<!-- Button Activation for diffrent sections -->\n<div id=\"home\" *ngIf=\"Home\">\n  <app-home></app-home>\n</div>\n\n<div id=\"profile\" *ngIf=\"Profile\">\n  <app-profile ></app-profile>\n</div>\n\n<div id=\"wallet\" *ngIf=\"Wallet\">\n  <app-wallet></app-wallet>\n</div>\n\n<div id=\"history\" *ngIf=\"History\">\n  <app-history></app-history>\n</div>\n\n<div id=\"market\" *ngIf=\"Market\">\n  <app-market></app-market>\n</div>\n\n<!-- For Debugging -->\n<!-- <span class=\"example-spacer\" *ngFor=\"let name of Users | async\">UID: {{uid}} kWh</span> -->\n\n\n<!-- Templete for reading from Firebase\n<li class=\"text\" *ngFor=\"let name of Users | async\">\n  {{name.name}}\n</li>\nEnd of template for reading from Firebase-->\n\n\n<!-- Navigation Toolbar  \n<button (click)=\"showHome()\" class=\"btn home\">Home</button>\n<button (click)=\"showProfile()\" class=\"btn profile\">Profile</button>\n<button (click)=\"showWallet()\" class=\"btn wallet\">Wallet</button>\n<button (click)=\"showHistory()\"class=\"btn history\">History</button>\n<button (click)=\"showMarket()\"class=\"btn market\">Market</button>\n-->\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \n  firebase: {\n    apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n    authDomain: \"helius-70808.firebaseapp.com\",\n    projectId: \"helius-70808\",\n    storageBucket: \"helius-70808.appspot.com\",\n    messagingSenderId: \"475929370500\",\n    appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n    measurementId: \"G-SWCJ32CMDT\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","//Imports\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Observable } from 'rxjs';\n\n//From ex\nimport { ApiService } from '../services/api.service'; \n\n// from https://blog.logrocket.com/creating-a-crud-firebase-documents-in-angular/\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { element } from 'protractor';\n\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css'],\n  //From Ex\n  providers: [ApiService]\n\n})\n\nexport class WalletComponent implements OnInit {\n\n  Users: Observable<any[]>;\n\n  constructor(\n    public firebaseService : FirebaseService,\n      private api : ApiService, \n      firestore : AngularFirestore ) {\n\n        //Firestore reading logic\n        this.Users = firestore.collection('Users').valueChanges();\n\n      }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Basic Wallet Info  -->\n\n<mat-list role=\"list\">\n    <mat-list-item role=\"listitem\" class=\"center\" lass=\"text\" *ngFor=\"let name of Users | async\" >Current Coins: {{name.wallet}}</mat-list-item>\n</mat-list>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //URL of django sever\n  baseurl = 'http://127.0.0.1:8000';\n\n  //Headers for HTTP\n  httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient) { }\n\n  //function for getting movie data from django\n  getAllMovies(): Observable<any>{\n    return this.http.get(this.baseurl + '/movies/', \n    {headers: this.httpHeaders});\n\n  }\n}\n","//This file handles most of the logic throughout the compnent\n\n//Imports\nimport { Component } from '@angular/core';\n\n//From https://github.com/angular/angularfire/blob/master/docs/install-and-setup.md\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n//These are sevices we use to connect to stuff\n//Taken from the services folder\nimport { FirebaseService } from './services/firebase.service';\nimport { ApiService } from './services/api.service'; \n\n\n//Component defintion\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ApiService]\n})\n\n//Basiclly the main() of the compnent \nexport class AppComponent  {\n\n  //Variable declerations\n  title = 'helius';\n  isSignedIn = false;\n  \n  //For reading firestore data\n  Users: Observable<any[]>;\n\n  //Initializes firebase and all its services\n  constructor(\n    public firebaseService : FirebaseService,\n    private api : ApiService, \n    firestore : AngularFirestore ) {\n    \n      //Firestore reading logic\n      this.Users = firestore.collection('Users').valueChanges();\n\n    }\n    \n  ngOnInit(){\n\n    //Checking if user is signed in\n    if(localStorage.getItem('user')!== null)\n      this.isSignedIn = true\n    else\n      this.isSignedIn = false\n\n  }\n\n  //Handles signup functionality\n  //TODO\n  /*\n  async onSignup(email: string, password:string){\n    await this.firebaseService.signup(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n  */\n\n  //Handles signin functionality\n  async onSignin(email: string, password:string){\n    await this.firebaseService.signin(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Logout functionality\n  handleLogout(){\n    this.isSignedIn = false\n  }\n\n}\n","<!--This is the main HTML of the Login Page -->\n\n<!--CSS Styles for centering -->\n<style>\n  .container { \n    height: 100px;\n    position: relative;\n  }\n  \n  .vertical-center {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n  }\n  \n  .center {\n  text-align: center;\n  margin: 30px;\n  }\n\n\n  </style>\n<!--end of CSS Styles for centering -->\n\n\n<!--Title of page -->\n<!--End of Title of page -->\n\n\n\n<!--Sign in component -->\n<div class=\"center\" *ngIf=\"!isSignedIn\">\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Email</mat-label>\n      <input matInput placeholder=\"Ex. Pizza\" value=\"test@helius.com\" #email>\n    </mat-form-field>\n  \n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input matInput placeholder=\"Ex. It makes me feel...\" value=\"123456\" #password>\n    </mat-form-field>\n    <button mat-raised-button (click)=\"onSignin(email.value,password.value)\">Sign In</button>\n  </form>\n</div>\n<!--End of Sign in component -->\n\n<!--Logout Handler -->\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogout()\"></app-home>\n<!--End of Logout Handler -->\n\n\n\n","//Imports\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Observable } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators'\n\n//From ex\nimport { ApiService } from '../services/api.service'; \n// from https://blog.logrocket.com/creating-a-crud-firebase-documents-in-angular/\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { element } from 'protractor';\nimport { firestore } from 'firebase';\n\nexport interface Users {\n  Name: string;\n  DOB: string;\n  Address: string;\n  City: string;\n  Email: string\n  Panels: number;\n  Phone: string;\n  PostalCode: string;\n  Province: string;\n\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  //From Ex\n  providers: [ApiService],\n  template:`\n  `\n})\nexport class ProfileComponent implements OnInit {\n\n  Users: Observable<Users[]> | undefined;\n  Data: Users[] = [];\n  currentUser = \"mFSXDDIf4rc0IfIYD6JVGAbmiaf1\";\n\n  constructor(\n    public firebaseService : FirebaseService,\n      private api : ApiService, \n      public firestore : AngularFirestore ) {\n\n        //Generates observable on User_Info\n        firestore.collection(\"User_Info\").get().toPromise().then()\n\n        const dbRef = firestore.collection<Users>('User_Info').valueChanges().subscribe((data) => {\n          this.Data = data;\n        })\n      }\n\n    \n  ngOnInit(): void {\n\n  }\n}\n","\n<!-- Basic Profile Info  -->\n<mat-list role=\"list\">\n    <mat-list-item role=\"listitem\" class=\"center\" lass=\"text\" *ngFor=\"let name of Data\">Name: {{name.Name}}</mat-list-item>\n</mat-list>\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn = false;\n  constructor(public firebaseAuth: AngularFireAuth,\n     private http: HttpClient,\n     private firestore: AngularFirestore\n     ) { }\n\n  //Authenticating with firebase email and login\n  async signin(email : string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  //Signining up with firebase auth\n  async signup(email : string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n\n  getPostings(){\n    return this.firestore.collection('Postings').snapshotChanges();\n  }\n\n  getUsers(){\n    return this.firestore.collection('User_Info').snapshotChanges();\n  }\n}\n","//Basic Routing\nimport { AppRoutingModule } from './app-routing.module';\n\n//From https://github.com/angular/angularfire/blob/master/docs/install-and-setup.md\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from '../environments/environment';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\n//Added for firebase authentication\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { HomeComponent } from './home/home.component';\nimport { FirebaseService } from './services/firebase.service';\n\n//From https://stackoverflow.com/questions/52523258/angularfire2-cant-find-module-firebase-app/55237532\n//import { AngularFireAuth } from '@angular/fire/auth';\n\n//Added fro htttp connections connection\nimport { HttpClientModule } from '@angular/common/http';\n\n//added from https://www.youtube.com/watch?v=TucRRB57fi8&t=336s\nimport { FormsModule } from '@angular/forms';\nimport { ProfileComponent } from './profile/profile.component';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { HistoryComponent } from './history/history.component';\nimport { MarketComponent } from './market/market.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//Angular Material Stuff\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n//I keep the new line\n//Fireatore stuff\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\n\n//Theme stuff\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Forms module\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tHomeComponent,\n\t\tProfileComponent,\n\t\tWalletComponent,\n\t\tHistoryComponent,\n\t\tMarketComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tFormsModule,\n\t\tAngularFireAnalyticsModule,\n\t\tAngularFirestoreModule,\n\t\tAngularFireModule.initializeApp(environment.firebase),\n\t\tMatSliderModule,\n\t\tMatMenuModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatToolbarModule,\n\t\tMatInputModule,\n\t\tMatListModule,\n\t\tMatGridListModule,\n\t\tMatTableModule,\n\t\tMatSlideToggleModule,\n\t\tMatFormFieldModule,\n\t\tReactiveFormsModule,\n\t\tMatSnackBarModule,\n\n\t\t//Firebase setup\n\t\tAngularFireModule.initializeApp({\n\t\t\tapiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n\t\t\tauthDomain: \"helius-70808.firebaseapp.com\",\n\t\t\tprojectId: \"helius-70808\",\n\t\t\tstorageBucket: \"helius-70808.appspot.com\",\n\t\t\tmessagingSenderId: \"475929370500\",\n\t\t\tappId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n\t\t\tmeasurementId: \"G-SWCJ32CMDT\"\n\t\t}),\n\t\tAngularFireAuthModule,\n\t\tAngularFireDatabaseModule,\n\n\t\t//For HTTP connecting\n\t\tHttpClientModule,\n\n\t\tBrowserAnimationsModule\n\t],\n\tproviders: [FirebaseService],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n//From ex\nimport { ApiService } from '../services/api.service'; \n// from https://blog.logrocket.com/creating-a-crud-firebase-documents-in-angular/\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\n\n//TESTING\nimport { element } from 'protractor';\nimport {MatTableModule} from '@angular/material/table';\nimport { TestBed } from '@angular/core/testing';\nimport {MDCDataTable} from '@material/data-table';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n\n//New rest stuff\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { snapshotChanges } from '@angular/fire/database';\n\n//Theming\nimport {OverlayContainer} from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport { time } from '@tensorflow/tfjs';\n\nimport { IgxTimePickerModule } from \"igniteui-angular\";\n//import { TimePickerSample1Component } from \"./timepicker-sample-1/timepicker-sample-1.component\";\nimport {formatDate} from '@angular/common';\n\n\n\n\n\n\n//Interfaces for Objects\nexport interface Postings {\n  user_name: string;\n  Energy: number;\n}\n\nexport interface user {\n  uid: string;\n}\n\nexport interface test {\n  length: number;\n  chain: string;\n  peers: string;\n}\n\nexport interface bid {\n  uid:  String;\n  Post_Id: String;\n  Amount: number;\n}\n\nexport interface transaction {\n  author: String;\n  buyer:  String;\n  seller: String;\n  quantity: number;\n  bidValue: number;\n}\n\nexport interface port {\n  node_ddress: String;\n}\n\n\n@Component({\n  selector: 'app-market',\n  templateUrl: './market.component.html',\n  styleUrls: ['./market.component.css'],\n  //From Ex\n  providers: [ApiService],\n  template: \n  `\n  <ul>\n    <li *ngFor=\"let item of items | async\">\n      {{ item.name }}\n    </li>\n  </ul>\n  <div >Sum of Production Array = {{ProductionArraySum}}</div>\n  `\n})\nexport class MarketComponent implements OnInit {\n  \n  //Firestore data reading/writing\n  private itemCollection: AngularFirestoreCollection<Postings>;\n  items: Observable<Postings[]> | undefined;\n  Users: Observable<any>;\n  \n  //for HTTP stuff\n  data: Observable<test[]> | undefined;\n  number: test | undefined;\n  walletValue: any | undefined;\n  \n  \n  postings: Postings[] | undefined;\n\n  //STABLE\n  //Basic chain object\n  Chain: any = [];\n  \n\n  displayedColumns = ['user_name',  'Energy', 'Bid', 'Bid Button'];\n  dataSource: Observable<Postings[]> | any;\n  dataDisplay: Observable<test[]> | undefined;\n\n  //Production variables\n  Production: any = [];\n  Consumption: any = [];\n  Surplus: any = [];\n\n  //value = 'Enter Bid';\n  \n  /////////////////////////START DEVELOPMENT AND TESTING //////////////////////////////////////////\n  \n  //temp user\n  parser = new DOMParser();\n\n  testval = 0;\n  currentUser = \"zvDRU1bQ0uNJTupmjnRt10MktYF3\";\n  // uid = JSON.parse(window.localStorage.getItem('user'));\n  // uid2 = \"\"\n  //let obj = JSON.parse(current)\n  //Basic date\n  //myDate = new Date;\n\n\n  today: number = Date.now();\n  myDate: any = new Date();\n\n\n\n\n  //URL Links\n  //readonly ROOT_URL = \"https://jsonplaceholder.typicode.com\"\n  //readonly SERVER_URL = \"http://127.0.0.1:8000\"\n  //dataTest:Observable<any[]>;\n  //buttonTest = '1';\n  ProductionArraySum: number[] = [];\n  testBuy: String = \"\";\n\n  //var d = new Date();\n\n  //new Date().toLocaleTimeString();\n\n\n\n  \n  //myDate now: = new Date();\n  //var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n\n  /////Dynamic form stuff\n  name = new FormControl('');\n\n  //Snackbar thing\n  durationInSeconds = 5;\n  \n\n  /////////////////////////END DEVELOPMENT AND TESTING //////////////////////////////////////////\n\n  //Initializes APIs for use throughout Helius\n  constructor(\n    public firebaseService : FirebaseService,\n    private api : ApiService, \n    private firestore : AngularFirestore,\n    private http: HttpClient,\n    public restApi: RestApiService,\n    overlayContainer: OverlayContainer,\n    auth: AngularFireAuthModule,\n    private _snackBar: MatSnackBar\n      ) {\n    \n      //Firestore reading logic\n      this.Users = firestore.collection('Users').doc(this.currentUser).valueChanges();\n      this.itemCollection = this.firestore.collection('Postings');\n      this.items = this.itemCollection.valueChanges();\n      //this.myDate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');\n\n      //TESTING\n      //this.currentUser = this.firebaseService.firebaseAuth.currentUser.uid();\n      //overlayContainer.getContainerElement().classList.add('dark-theme-mode');\n      //this.items = this.itemCollection.valueChanges()._subscribe( data => {\n    }\n\n    openSnackBar(message: string, action: string) {\n      this._snackBar.open(message, action, {\n        duration: 2000,\n      });\n    }\n    \n    //Gets values in current users wallet\n    checkWallet(){\n      this.walletValue = this.firestore.collection(\"Users\").get()\n    }\n    \n    addItem(item: Postings) {\n      this.itemCollection.add(item);\n    }\n\n    //TODO add parameters to function to specifly deletes\n    deletePosting(seller: string){\n      this.firestore.collection(\"Postings\").doc(seller).delete();\n    }\n\n    //Sends V4s port address to V5s node server\n    connectToNetwork(){\n      let port = {\n        node_address: 'localhost:8000',\n      }\n      this.restApi.connectToChain(port);\n    }\n\n    //TESTING\n    //passsing UID around\n    passUid(uid:string){\n      // this.uid2 = uid;\n    }   \n\n    //When the compnent loads, these functions run\n    async ngOnInit(){\n      this.dataSource = this.items;\n      \n      //Pulling Postings from firbase \"Postings\"\n      this.firebaseService.getPostings().subscribe(data => {\n        this.postings = data.map(e => {\n          return {\n            user_name: e.payload.doc.id,\n            Energy: e.payload.doc.data()\n          } as unknown as Postings\n        })\n      })\n    }\n\n\n  /////////////////////////FOR DEVELOPMENT AND TESTING //////////////////////////////////////////\n\n   //Called when a user selects \"Bid\" in posting\n   buyEnergy(postID: number, Energy: number, bidValue: number){\n\n    // Get \"author\", \"buyer\", \"seller\", \"quantity\"\n    // let transaction = {\n    //     author: \"Marko\",\n    //     buyer:  \"Marko\",\n    //     seller: seller,\n    //     quantity: quantity,\n    //     //bidValue: bidValue,\n    //   }\n    //   send data to chain for processing  \n    //   this.restApi.postChain(transaction);\n\n      //convert bidVal to int for sure\n      //var safeBidVal= parseInt(bidVal)\n\n      //bidValue.toString()\n      this.openSnackBar(\"Submitted bid of:\", \"Suck it\" )\n\n      this.today\n\n      // this.myDate.format(this.myDate.setDate(this.myDate.getDate()))\n\n      \n      this.testval = bidValue\n      var tempPostID = postID.toString()\n\n      //Send bid to server\n      let bid = {\n        uid:  this.currentUser,\n        Post_Id: tempPostID,\n        Amount: bidValue,\n      }\n\n      console.log(bid)\n      this.postBid(bid)\n\n      //Delete Posting\n      //this.deletePosting(seller)\n    }\n\n    \n  //Loads the entire chain\n  loadChain() {\n    return this.restApi.getChain().subscribe((data: {}) => {\n      this.Chain.push(data)\n    })};\n  \n    //Adds a placeholder posting for testing\n    addPosting(){\n      var markoUpdate = this.firestore.collection(\"Postings\").doc(\"Marko\")\n      markoUpdate.set({\n        user_name: \"Marko\",\n        Energy: 345,\n      });\n\n      var shaunUpdate = this.firestore.collection(\"Postings\").doc(\"Shaun\")\n      shaunUpdate.set({\n        user_name: \"Shaun\",\n        Energy: 500,\n      });\n\n      var yashUpdate = this.firestore.collection(\"Postings\").doc(\"Yash\")\n      yashUpdate.set({\n        user_name: \"Yash\",\n        Energy: 333,\n      });\n\n      var yassineUpdate = this.firestore.collection(\"Postings\").doc(\"Yassine\")\n      yassineUpdate.set({\n        user_name: \"Yassine\",\n        Energy: 420,\n      });\n    }\n\n    addUserPosting(){\n\n      this.myDate.setDate(this.myDate.getDate() + 1);\n\n\n      //Create random ID\n      var randDocId = Math.floor(Math.random() * 100000).toString();\n\n      //Make a new posting using ranomd ID\n      var userUpdate = this.firestore.collection(\"Postings\").doc(randDocId)\n      userUpdate.set({\n        Energy: 666,\n        Owner: this.currentUser,\n        PostID: randDocId,\n        \n        //Hardcoded time\n        Time: this.myDate.toString()\n      });\n    }\n  //Calculate the sum of the production array\n  //FUCK THIS\n  calcSumProductionArray(){\n    var sum = 1;\n    let temp: any[] = [];\n    var i;\n\n    for(i in this.Production){\n      this.ProductionArraySum[0] += this.Production[i];\n      //this.ProductionArraySum += this.Production[i];\n    }\n  }\n\n  //Sends request for solar production data\n  postProduction(){\n    return this.restApi.postProduction().subscribe((data: {}) => {\n      this.Production.push(data)\n      //let var = data;\n      this.calcSumProductionArray();\n  })};\n\n  //Sends request for solar production data\n  postConsumption(){\n    return this.restApi.postConsumption().subscribe((data: {}) => {\n      this.Consumption.push(data)\n  })};\n\n  postBid(bid: bid){\n    return this.restApi.postBid(bid).subscribe((data: {}) => {\n      //this.Consumption.push(data)\n  })};\n\n  //Sends request for solar production data\n  postSurplus(){\n    return this.restApi.postSurplus().subscribe((data: {}) => {\n      this.Consumption.push(data)\n  })};\n\n  getBidValue(bid: number){\n    console.warn(bid)\n  }\n\n\n\n\n  /////////////////////////END DEVELOPMENT AND TESTING //////////////////////////////////////////\n  \n  //   this.Production = this.restApi.postProduction();\n  // }\n  \n  //   isLoggedIn() {\n  //     return this.afAuth.authState.pipe(first()).toPromise();\n  //  }\n\n  //Sends dummy data to chain\n  newTransaction(){\n    //this.restApi.postChain();\n  }\n\n  cleanProdArray(){\n    this.Production = 0;\n  }\n      //FOR DEBUGGING ONLY\n  // loadProduction() {\n  //     //this.restApi.getProduction();\n  //     return this.restApi.getProduction().subscribe((data: {}) => {\n  //       this.Production.push(data)\n  //   })};\n\n};","<!doctype html>\n<html color=\"primary\">\n\n<head>\n<meta charset=\"utf-8\">\n</head>\n\n  <!-- Marketplace table -->\n<table mat-table color=\"primary\" [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n  <!-- Seller Column -->\n  <ng-container matColumnDef=\"user_name\">\n    <th mat-header-cell *matHeaderCellDef> Post Id </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.PostID}} </td>\n  </ng-container>\n\n  <!-- Cost Column -->\n  <ng-container matColumnDef=\"Energy\">\n    <th mat-header-cell *matHeaderCellDef> Energy </th>\n    <td mat-cell *matCellDef=\"let element\">{{element.Energy}} \n      <!-- <button  mat-raised-button color=\"warn\" (click)=\"buyEnergy(element.user_name, element.Energy)\">Bid</button> -->\n      <!-- <input matInput type=\"text\" [(ngModel)]=\"value\"> -->\n    </td>\n  </ng-container>\n\n  <!-- Bid Column -->\n  <ng-container matColumnDef=\"Bid\">\n    <th mat-header-cell *matHeaderCellDef> Bid Value </th>\n    <!-- Cell Contents -->\n    <td mat-cell  *matCellDef=\"let element\" >\n    <!-- Bid Input Section -->\n    <mat-form-field class=\"example-form-field\" appearance=\"outline\" >\n      <input matInput type=\"number\" value=666 id=\"{{element}}\" [formControl]=\"name\">\n      <!-- <button mat-button  matSuffix mat-icon-button aria-label=\"Clear\" > -->\n        <!-- <mat-icon>close</mat-icon> -->\n      <!-- </button> -->\n    </mat-form-field>\n    \n    </td>\n  </ng-container>\n\n  <!-- Bid Button Column -->\n  <ng-container matColumnDef=\"Bid Button\">\n    <th mat-header-cell *matHeaderCellDef> Bid Button </th>\n    <!-- Cell Contents -->\n    <td mat-cell *matCellDef=\"let element\">\n    <!-- Bid Button -->\n      <button mat-raised-button color=\"warn\" (click)=\"buyEnergy(element.PostID, element.Energy, name.value)\">Bid</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<br>\n\n<!--  /////////////////////////START DEVELOPMENT AND TESTING ////////////////////////////////////////// -->\n\n<!-- Posting Utilities -->\n<h1>Testing Utilities</h1>\n<h2>Posting Tools</h2>\n<button mat-raised-button color=\"primary\" (click)=\"addPosting()\">Add Temp Postings</button>\n<button mat-raised-button color=\"primary\" (click)=\"addUserPosting()\">Add User Posting</button>\n\n<br>\n\n<!-- Blockchain Utilities-->\n<h2>BlockChain Tools</h2>\n<button mat-raised-button color=\"primary\" (click)=\"loadChain()\">Load Chain</button>\n<button mat-raised-button color=\"primary\" (click)=\"connectToNetwork()\">Connect to v4 Network</button>\n<br>\n\n<!-- Solar Production Utilities-->\n<h2>Solar Production Tools</h2>\n<button mat-raised-button color=\"primary\" (click)=\"postProduction()\">\"Post\" Production</button>\n<button mat-raised-button color=\"primary\" (click)=\"calcSumProductionArray()\">Sum Production Array</button>\n<button mat-raised-button color=\"primary\" (click)=\"cleanProdArray()\">Clean Production Array</button>\n<br>\n\n<!-- Solar Production Utilities-->\n<h2>Solar Consumption Tools</h2>\n<button mat-raised-button color=\"primary\" (click)=\"postConsumption()\">\"Post\" Consumption</button>\n<br>\n\n<!-- Solar Surplus Utilities-->\n<h2>Solar Surplus Tools</h2>\n<button mat-raised-button color=\"primary\" (click)=\"postSurplus()\">\"Post\" Surplus</button>\n<br>\n\n<!-- Bid Utilities -->\n<h2>Bid Tools</h2>\n<label>\n  Name:\n  <input type=\"text\" [formControl]=\"name\">\n</label>\n<p>\n  Value: {{ name.value }}\n</p>\n\n<!-- Data Viz-->\n<h2>Data Visualizations</h2>\n<br>\n<div *ngFor=\"let chain of Chain\">\n  CHAIN: {{chain | json}}\n</div>\n<br>\n<div *ngFor=\"let prod of Production\">\n  PRODUCTION: {{prod | json}}\n</div>\n<br>\n<div *ngFor=\"let cons of Consumption\">\n  CONSUMPTION: {{cons | json}}\n</div>\n\n<!-- Other Viz -->\n<h2>Testing Visualizations</h2>\n<div >Sum of Production Array = {{ProductionArraySum}}</div>\n<div >Test Values = {{today |  date:'shortTime'}}</div>\n\n\n\n\n<!-- DEPRECATED -->\n<!-- <button mat-raised-button color=\"primary\" (click)=\"loadProduction()\">Load Production data</button> -->\n<!-- <button mat-raised-button color=\"primary\" (click)=\"newTransaction()\">Post Chain</button> -->\n<!-- <button mat-raised-button color=\"primary\" (click)=\"passUid(uid.uid)\">Passit!</button> -->\n<!-- <div >Uid = {{uid2}}</div> -->\n<!-- Basic examples of reading from firebase-->\n<!-- <p>Todays date is: {{myDate | date:'shortDate'}} </p> -->\n<!-- <span class=\"example-spacer\" *ngFor=\"let name of Users | async\">Your expected prodiction today is {{name.prod}} kWh</span> -->\n<!-- <span class=\"example-spacer\" *ngFor=\"let name of Users | async\">Your expected prodiction today is {{name.cons}} kWh</span> -->\n<!-- <span class=\"example-spacer\" *ngFor=\"let name of Users | async\">Your expected surplus today is {{name.prod - name.cons}} kWh</span> -->\n<!-- <span class=\"example-spacer\" *ngFor=\"let name of Users | async\">Wallet: {{name.wallet}} </span> -->\n\n<!--  /////////////////////////END DEVELOPMENT AND TESTING ////////////////////////////////////////// -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>history works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n//Imports to routing HTTP\nimport { MarketComponent } from './market/market.component';\n\n\nconst routes: Routes = [\n  { path: 'market', component: MarketComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}