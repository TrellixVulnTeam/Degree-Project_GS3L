import { Component, Input, TemplateRef, ViewChild, Output, EventEmitter } from '@angular/core';
export class IgxGridActionButtonComponent {
    constructor() {
        /**
         * Event emitted when action button is clicked.
         *
         * @example
         * ```html
         *  <igx-grid-action-button (onActionClick)="startEdit($event)"></igx-grid-action-button>
         * ```
         */
        this.onActionClick = new EventEmitter();
        /**
         * Whether button action is rendered in menu and should container text label.
         */
        this.asMenuItem = false;
    }
    /** @hidden @internal */
    get containerClass() {
        return 'igx-action-strip__menu-button ' + (this.classNames || '');
    }
    /**
     * @hidden
     * @internal
     */
    handleClick(event) {
        this.onActionClick.emit(event);
    }
    /**
     * @hidden @internal
     */
    preventEvent(event) {
        if (event) {
            event.stopPropagation();
            event.preventDefault();
        }
    }
}
IgxGridActionButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'igx-grid-action-button',
                template: "<ng-container *ngIf=\"!asMenuItem\">\n\n    <ng-container *ngIf=\"!asMenuItem\">\n        <button igxButton=\"icon\" igxRipple (click)=\"handleClick($event)\" (mousedown)=\"preventEvent($event)\">\n            <igx-icon *ngIf=\"iconSet\" [fontSet]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n            <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"asMenuItem\">\n        <div #container [className]='containerClass'>\n            <igx-icon *ngIf=\"iconSet\" [fontSet]=\"iconSet\" [name]=\"iconName\">{{iconName}}</igx-icon>\n            <igx-icon *ngIf=\"!iconSet\" >{{iconName}}</igx-icon>\n            <label *ngIf='asMenuItem' igxLabel>{{labelText}}</label>\n        </div>\n    </ng-container>\n</ng-container>\n"
            },] }
];
IgxGridActionButtonComponent.propDecorators = {
    container: [{ type: ViewChild, args: ['container',] }],
    onActionClick: [{ type: Output }],
    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],
    asMenuItem: [{ type: Input }],
    iconName: [{ type: Input }],
    classNames: [{ type: Input }],
    iconSet: [{ type: Input }],
    labelText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1hY3Rpb24tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9hY3Rpb24tc3RyaXAvZ3JpZC1hY3Rpb25zL2dyaWQtYWN0aW9uLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFjLE1BQU0sZUFBZSxDQUFDO0FBTTNHLE1BQU0sT0FBTyw0QkFBNEI7SUFMekM7UUFVSTs7Ozs7OztXQU9HO1FBRUgsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBUyxDQUFDO1FBVzFDOztXQUVHO1FBRUksZUFBVSxHQUFHLEtBQUssQ0FBQztJQWdEOUIsQ0FBQztJQWxDRyx3QkFBd0I7SUFDeEIsSUFBSSxjQUFjO1FBQ2QsT0FBTyxnQ0FBZ0MsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQWNEOzs7T0FHRztJQUNJLFdBQVcsQ0FBQyxLQUFLO1FBQ3JCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRDs7T0FFRztJQUNJLFlBQVksQ0FBQyxLQUFLO1FBQ3JCLElBQUksS0FBSyxFQUFFO1lBQ1AsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1lBQ3hCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUMxQjtJQUNMLENBQUM7OztZQWpGSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsb3pCQUFnRDthQUNuRDs7O3dCQUlJLFNBQVMsU0FBQyxXQUFXOzRCQVdyQixNQUFNOzBCQVNOLFNBQVMsU0FBQyxXQUFXO3lCQU1yQixLQUFLO3VCQU1MLEtBQUs7eUJBTUwsS0FBSztzQkFXTCxLQUFLO3dCQU1MLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpZ3gtZ3JpZC1hY3Rpb24tYnV0dG9uJyxcbiAgICB0ZW1wbGF0ZVVybDogJ2dyaWQtYWN0aW9uLWJ1dHRvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5cbmV4cG9ydCBjbGFzcyBJZ3hHcmlkQWN0aW9uQnV0dG9uQ29tcG9uZW50IHtcblxuICAgIEBWaWV3Q2hpbGQoJ2NvbnRhaW5lcicpXG4gICAgcHVibGljIGNvbnRhaW5lcjogRWxlbWVudFJlZjtcblxuICAgIC8qKlxuICAgICAqIEV2ZW50IGVtaXR0ZWQgd2hlbiBhY3Rpb24gYnV0dG9uIGlzIGNsaWNrZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYGh0bWxcbiAgICAgKiAgPGlneC1ncmlkLWFjdGlvbi1idXR0b24gKG9uQWN0aW9uQ2xpY2spPVwic3RhcnRFZGl0KCRldmVudClcIj48L2lneC1ncmlkLWFjdGlvbi1idXR0b24+XG4gICAgICogYGBgXG4gICAgICovXG4gICAgQE91dHB1dCgpXG4gICAgb25BY3Rpb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8RXZlbnQ+KCk7XG5cbiAgICAvKipcbiAgICAgKiBSZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgdGVtcGxhdGUuXG4gICAgICpcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQFZpZXdDaGlsZChUZW1wbGF0ZVJlZilcbiAgICBwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIGJ1dHRvbiBhY3Rpb24gaXMgcmVuZGVyZWQgaW4gbWVudSBhbmQgc2hvdWxkIGNvbnRhaW5lciB0ZXh0IGxhYmVsLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGFzTWVudUl0ZW0gPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIGljb24gdG8gZGlzcGxheSBpbiB0aGUgYnV0dG9uLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGljb25OYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBBZGRpdGlvbmFsIE1lbnUgaXRlbSBjb250YWluZXIgZWxlbWVudCBjbGFzc2VzLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGNsYXNzTmFtZXM6IHN0cmluZztcblxuICAgIC8qKiBAaGlkZGVuIEBpbnRlcm5hbCAqL1xuICAgIGdldCBjb250YWluZXJDbGFzcygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gJ2lneC1hY3Rpb24tc3RyaXBfX21lbnUtYnV0dG9uICcgKyAodGhpcy5jbGFzc05hbWVzIHx8ICcnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiBzZXQuIFVzZWQgaW4gY2FzZSB0aGUgaWNvbiBpcyBmcm9tIGEgZGlmZmVyZW50IGljb24gc2V0LlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIGljb25TZXQ6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFRoZSB0ZXh0IG9mIHRoZSBsYWJlbC5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBsYWJlbFRleHQ6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwdWJsaWMgaGFuZGxlQ2xpY2soZXZlbnQpIHtcbiAgICAgICB0aGlzLm9uQWN0aW9uQ2xpY2suZW1pdChldmVudCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlbiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBwdWJsaWMgcHJldmVudEV2ZW50KGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudCkge1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19