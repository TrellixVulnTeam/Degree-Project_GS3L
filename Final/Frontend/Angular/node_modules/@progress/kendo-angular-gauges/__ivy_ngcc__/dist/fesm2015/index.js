/**-----------------------------------------------------------------------------------------
* Copyright © 2020 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { __decorate, __metadata, __param } from 'tslib';
import { Injectable, NgModule, Input, ViewChild, ElementRef, HostBinding, Directive, Optional, TemplateRef, ContentChild, Component, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, NgZone, ContentChildren, QueryList } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ResizeSensorModule, ResizeSensorComponent } from '@progress/kendo-angular-common';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@progress/kendo-angular-intl';
import * as ɵngcc2 from '@progress/kendo-angular-l10n';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@progress/kendo-angular-common';

const _c0 = ["surface"];
const _c1 = ["label"];
function ArcGaugeComponent_div_2_ng_template_2_Template(rf, ctx) { }
function ArcGaugeComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4, 5);
    ɵngcc0.ɵɵtemplate(2, ArcGaugeComponent_div_2_ng_template_2_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.centerTemplate.templateRef)("ngTemplateOutletContext", ctx_r1.centerTemplateContext);
} }
export { ResizeSensorComponent } from '@progress/kendo-angular-common';
import { IntlService } from '@progress/kendo-angular-intl';
import { LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';
import { exportImage, exportSVG, drawDOM } from '@progress/kendo-drawing';
import { validatePackage } from '@progress/kendo-licensing';
import { ArcGauge, LinearGauge, RadialGauge } from '@progress/kendo-charts';

function isObject(value) {
    return typeof value === "object";
}
function diffOptions(original, current) {
    if (Object.keys(original).length !== Object.keys(current).length) {
        return true;
    }
    for (let field in original) {
        if (field !== 'value' && original.hasOwnProperty(field)) {
            const originalValue = original[field];
            const currentValue = current[field];
            const diff = isObject(originalValue) && isObject(currentValue) ?
                diffOptions(originalValue, currentValue) : originalValue !== currentValue;
            if (diff) {
                return true;
            }
        }
    }
}
function diffPointerOptions(original, current) {
    if (!original || !current) {
        return true;
    }
    original = [].concat(original);
    current = [].concat(current);
    if (original.length !== current.length) {
        return true;
    }
    for (let idx = 0; idx < original.length; idx++) {
        if (diffOptions(original[idx], current[idx])) {
            return true;
        }
    }
}
/**
 * @hidden
 */
let ConfigurationService = class ConfigurationService {
    /**
     * @hidden
     */
    constructor() {
        this.options = {};
    }
    copyChanges(prefix, changes) {
        for (let propertyName in changes) {
            if (!changes.hasOwnProperty(propertyName)) {
                continue;
            }
            const value = changes[propertyName].currentValue;
            const optionName = (prefix ? prefix + '.' : '') + propertyName;
            this.set(optionName, value);
        }
    }
    read() {
        this.hasChanges = false;
        this.valueChange = false;
        return this.options;
    }
    readValues() {
        this.valueChange = false;
        const pointers = [].concat(this.options.pointer);
        return pointers.map((pointer) => pointer.value);
    }
    readValue() {
        this.valueChange = false;
        return this.options.value;
    }
    set(field, value) {
        const { key, options } = this.optionContext(field);
        if (!this.hasChanges && (key === 'value' || (key === 'pointer' && !diffPointerOptions(this.options.pointer, value)))) {
            this.valueChange = true;
        }
        else {
            this.hasChanges = true;
            this.valueChange = false;
        }
        options[key] = value;
    }
    optionContext(field) {
        const parts = field.split('.');
        let options = this.options;
        let key = parts.shift();
        while (parts.length > 0) {
            options = options[key] = options[key] || {};
            key = parts.shift();
        }
        return { key: key, options: options };
    }
};
ConfigurationService.ɵfac = function ConfigurationService_Factory(t) { return new (t || ConfigurationService)(); };
ConfigurationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ConfigurationService, factory: function (t) { return ConfigurationService.ɵfac(t); } });

/**
 * @hidden
 */
let CollectionChangesService = class CollectionChangesService {
};
CollectionChangesService.ɵfac = function CollectionChangesService_Factory(t) { return new (t || CollectionChangesService)(); };
CollectionChangesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CollectionChangesService, factory: function (t) { return CollectionChangesService.ɵfac(t); } });

const template = `
    <div class="k-var--gauge-pointer"></div>
    <div class="k-var--gauge-track"></div>
    <div class="k-var--normal-text-color"></div>
`;
/**
 * @hidden
 */
let ThemeService = class ThemeService {
    read() {
        if (!this.options) {
            this.load();
        }
        return this.options;
    }
    load() {
        if (typeof document === 'undefined') {
            this.options = {};
            return;
        }
        const container = document.createElement('div');
        container.style.display = 'none';
        container.innerHTML = template;
        document.body.appendChild(container);
        try {
            const pointerColor = this.getColor(container, 'gauge-pointer');
            const rangePlaceholder = this.getColor(container, 'gauge-track');
            const textColor = this.getColor(container, 'normal-text-color');
            this.options = {
                pointer: {
                    color: pointerColor
                },
                scale: {
                    labels: {
                        color: textColor
                    },
                    rangePlaceholderColor: rangePlaceholder,
                    minorTicks: {
                        color: textColor
                    },
                    majorTicks: {
                        color: textColor
                    },
                    line: {
                        color: textColor
                    }
                }
            };
        }
        finally {
            document.body.removeChild(container);
        }
    }
    getColor(container, varName) {
        return window.getComputedStyle(container.querySelector(`.k-var--${varName}`)).backgroundColor;
    }
};
ThemeService.ɵfac = function ThemeService_Factory(t) { return new (t || ThemeService)(); };
ThemeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ThemeService, factory: function (t) { return ThemeService.ɵfac(t); } });

/**
 * @hidden
 */
let SharedModule = class SharedModule {
};
SharedModule.ɵfac = function SharedModule_Factory(t) { return new (t || SharedModule)(); };
SharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SharedModule });
SharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [
        ThemeService
    ], imports: [ResizeSensorModule] });

/**
 * @hidden
 */
class CollectionComponent {
    constructor(key, configurationService, collectionChangesService) {
        this.key = key;
        this.configurationService = configurationService;
        this.collectionChangesService = collectionChangesService;
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
        this.configurationService.set(this.key, []);
    }
    ngAfterContentInit() {
        this.subscription = this.children.changes.subscribe(() => this.collectionChangesService.hasChanges = true);
    }
    ngAfterContentChecked() {
        if (this.collectionChangesService.hasChanges) {
            this.configurationService.set(this.key, this.readItems());
            this.collectionChangesService.hasChanges = false;
        }
    }
    readItems() {
        return this.children.map(child => Object.assign({}, child.configurationService.read()));
    }
}
CollectionComponent.ɵfac = function CollectionComponent_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
CollectionComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CollectionComponent });

/**
 * @hidden
 */
class CollectionItemComponent {
    constructor(configurationService, collectionChangesService) {
        this.configurationService = configurationService;
        this.collectionChangesService = collectionChangesService;
    }
    ngOnChanges(changes) {
        this.configurationService.copyChanges('', changes);
        this.collectionChangesService.hasChanges = true;
    }
}
CollectionItemComponent.ɵfac = function CollectionItemComponent_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
CollectionItemComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CollectionItemComponent, features: [ɵngcc0.ɵɵNgOnChangesFeature] });

/**
 * @hidden
 */
const packageMetadata = {
    name: '@progress/kendo-angular-gauges',
    productName: 'Kendo UI for Angular',
    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],
    publishDate: 1608133935,
    version: '',
    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'
};

const inDocument = (element) => {
    let node = element;
    while (node && node !== document.body) {
        node = node.parentNode;
    }
    return Boolean(node);
};
/**
 * @hidden
 */
class GaugeComponent {
    constructor(configurationService, themeService, intlService, localizationService, element, renderer, ngZone) {
        this.configurationService = configurationService;
        this.themeService = themeService;
        this.intlService = intlService;
        this.localizationService = localizationService;
        this.element = element;
        this.renderer = renderer;
        this.ngZone = ngZone;
        /**
         * The maximum number of times the Gauge resizes per second.
         * Defaults to `10`. To disable the automatic resizing, set `resizeRateLimit` to `0`.
         */
        this.resizeRateLimit = 10;
        this.className = true;
        this.theme = null;
        this.rtl = false;
        validatePackage(packageMetadata);
    }
    ngOnInit() {
        this.setDirection();
        this.subscriptions = this.intlService.changes.subscribe(this.intlChange.bind(this));
        this.subscriptions.add(this.localizationService.changes.subscribe(this.rtlChange.bind(this)));
    }
    ngAfterViewChecked() {
        if (typeof document === 'undefined') {
            return;
        }
        let updateMethod;
        if (!this.instance) {
            updateMethod = this.init;
        }
        else if (this.configurationService.hasChanges) {
            updateMethod = this.updateOptions;
        }
        else if (this.configurationService.valueChange) {
            updateMethod = this.setValues;
        }
        if (updateMethod) {
            clearTimeout(this.redrawTimeout);
            if (!this.instance && !inDocument(this.element.nativeElement)) { // required in case the gauge is initialized by ng-content outside of the DOM
                this.defer(() => {
                    this.updateCall(updateMethod);
                });
            }
            else {
                this.updateCall(updateMethod);
            }
        }
    }
    updateCall(updateMethod) {
        this.updateDirection();
        updateMethod.call(this);
        this.updateSize();
    }
    updateOptions() {
        this.instance.setOptions(this.configurationService.read());
    }
    setValues() {
        this.instance.allValues(this.configurationService.readValues());
    }
    ngOnChanges(changes) {
        this.configurationService.copyChanges('', changes);
    }
    ngOnDestroy() {
        if (this.instance) {
            this.instance.destroy();
        }
        this.subscriptions.unsubscribe();
        clearTimeout(this.redrawTimeout);
    }
    /**
     * Exports the Gauge as an image. The export operation is asynchronous and returns a promise.
     *
     * @param {ImageExportOptions} options - The parameters for the exported image.
     * @returns {Promise<string>} - A promise that will be resolved with a PNG image that is encoded as a Data URI.
     */
    exportImage(options = {}) {
        return this.exportVisual().then((visual) => {
            return exportImage(visual, options);
        });
    }
    /**
     * Exports the Gauge as an SVG document. The export operation is asynchronous and returns a promise.
     *
     * @param {SVGExportOptions} options - The parameters for the exported file.
     * @returns {Promise<string>} - A promise that will be resolved with an SVG document that is encoded as a Data URI.
     */
    exportSVG(options = {}) {
        return this.exportVisual().then((visual) => {
            return exportSVG(visual, options);
        });
    }
    /**
     * Exports the Gauge as a Drawing `Scene`.
     *
     * @returns {Promise<Group>} - A promise that will be resolved with the export visual.
     */
    exportVisual() {
        return Promise.resolve(this.instance.exportVisual());
    }
    /**
     * @hidden
     */
    onResize(_event) {
        if (this.autoResize) {
            this.resize();
        }
    }
    /**
     * Detects the size of the container and redraws the Gauge.
     * Resizing is automatic unless you set the `resizeRateLimit` option to `0`.
     */
    resize() {
        if (this.instance) {
            this.instance.resize();
        }
    }
    init() {
        if (!this.surfaceElement) {
            return;
        }
        this.createInstance(this.surfaceElement.nativeElement, this.configurationService.read(), this.themeService.read(), {
            intlService: this.intlService,
            rtl: this.rtl
        });
    }
    get autoResize() {
        return this.resizeRateLimit > 0;
    }
    updateSize() {
        this.resizeSensor.acceptSize();
    }
    intlChange() {
        if (this.instance) {
            this.deferredRedraw();
        }
    }
    rtlChange() {
        if (this.instance && this.rtl !== this.isRTL) {
            this.deferredRedraw();
        }
    }
    deferredRedraw() {
        this.defer(() => {
            this.updateDirection();
            this.instance.noTransitionsRedraw();
        });
    }
    defer(callback) {
        this.ngZone.runOutsideAngular(() => {
            clearTimeout(this.redrawTimeout);
            this.redrawTimeout = setTimeout(callback, 0);
        });
    }
    updateDirection() {
        const current = this.isRTL;
        if (this.rtl !== current) {
            this.setDirection();
            if (this.instance) {
                this.instance.setDirection(current);
            }
        }
    }
    setDirection() {
        this.rtl = this.isRTL;
        if (this.element) {
            this.renderer.setAttribute(this.element.nativeElement, 'dir', this.rtl ? 'rtl' : 'ltr');
        }
    }
    get isRTL() {
        return Boolean(this.localizationService.rtl);
    }
}
GaugeComponent.ɵfac = function GaugeComponent_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
GaugeComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GaugeComponent, viewQuery: function GaugeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 3);
        ɵngcc0.ɵɵviewQuery(ResizeSensorComponent, 3);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.surfaceElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizeSensor = _t.first);
    } }, hostVars: 2, hostBindings: function GaugeComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("k-gauge", ctx.className);
    } }, inputs: { resizeRateLimit: "resizeRateLimit", gaugeArea: "gaugeArea", renderAs: "renderAs", scale: "scale", transitions: "transitions" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
__decorate([
    Input(),
    __metadata("design:type", Object)
], GaugeComponent.prototype, "gaugeArea", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], GaugeComponent.prototype, "renderAs", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], GaugeComponent.prototype, "resizeRateLimit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], GaugeComponent.prototype, "scale", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], GaugeComponent.prototype, "transitions", void 0);
__decorate([
    ViewChild('surface', { static: true }),
    __metadata("design:type", ElementRef)
], GaugeComponent.prototype, "surfaceElement", void 0);
__decorate([
    ViewChild(ResizeSensorComponent, { static: true }),
    __metadata("design:type", ResizeSensorComponent)
], GaugeComponent.prototype, "resizeSensor", void 0);
__decorate([
    HostBinding('class.k-gauge'),
    __metadata("design:type", Boolean)
], GaugeComponent.prototype, "className", void 0);

/**
 * @hidden
 */
class SettingsComponent {
    constructor(key, configurationService) {
        this.key = key;
        this.configurationService = configurationService;
    }
    ngOnChanges(changes) {
        this.configurationService.copyChanges(this.key, changes);
    }
    ngOnDestroy() {
        this.configurationService.set(this.key, null);
    }
}
SettingsComponent.ɵfac = function SettingsComponent_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };
SettingsComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SettingsComponent, features: [ɵngcc0.ɵɵNgOnChangesFeature] });

/**
 * @hidden
 */
class GaugeAreaComponent extends SettingsComponent {
}
GaugeAreaComponent.ɵfac = function GaugeAreaComponent_Factory(t) { return ɵGaugeAreaComponent_BaseFactory(t || GaugeAreaComponent); };
GaugeAreaComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GaugeAreaComponent, inputs: { background: "background", border: "border", height: "height", margin: "margin", width: "width" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
__decorate([
    Input(),
    __metadata("design:type", String)
], GaugeAreaComponent.prototype, "background", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], GaugeAreaComponent.prototype, "border", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], GaugeAreaComponent.prototype, "height", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], GaugeAreaComponent.prototype, "margin", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], GaugeAreaComponent.prototype, "width", void 0);

/**
 * @hidden
 */
class LabelsComponent extends SettingsComponent {
}
LabelsComponent.ɵfac = function LabelsComponent_Factory(t) { return ɵLabelsComponent_BaseFactory(t || LabelsComponent); };
LabelsComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LabelsComponent, inputs: { background: "background", border: "border", color: "color", font: "font", format: "format", margin: "margin", padding: "padding", content: "content", visible: "visible" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
__decorate([
    Input(),
    __metadata("design:type", String)
], LabelsComponent.prototype, "background", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LabelsComponent.prototype, "border", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LabelsComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LabelsComponent.prototype, "font", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LabelsComponent.prototype, "format", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LabelsComponent.prototype, "margin", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LabelsComponent.prototype, "padding", void 0);
__decorate([
    Input(),
    __metadata("design:type", Function)
], LabelsComponent.prototype, "content", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], LabelsComponent.prototype, "visible", void 0);

/**
 * @hidden
 */
class RangeComponent extends CollectionItemComponent {
}
RangeComponent.ɵfac = function RangeComponent_Factory(t) { return ɵRangeComponent_BaseFactory(t || RangeComponent); };
RangeComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeComponent, inputs: { from: "from", to: "to", opacity: "opacity", color: "color" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
__decorate([
    Input(),
    __metadata("design:type", Number)
], RangeComponent.prototype, "from", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RangeComponent.prototype, "to", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RangeComponent.prototype, "opacity", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], RangeComponent.prototype, "color", void 0);

/**
 * @hidden
 */
class ScaleComponent extends SettingsComponent {
}
ScaleComponent.ɵfac = function ScaleComponent_Factory(t) { return ɵScaleComponent_BaseFactory(t || ScaleComponent); };
ScaleComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ScaleComponent, inputs: { labels: "labels", majorTicks: "majorTicks", minorTicks: "minorTicks", min: "min", max: "max", minorUnit: "minorUnit", majorUnit: "majorUnit", reverse: "reverse", rangeSize: "rangeSize", rangePlaceholderColor: "rangePlaceholderColor" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
__decorate([
    Input(),
    __metadata("design:type", Object)
], ScaleComponent.prototype, "labels", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], ScaleComponent.prototype, "majorTicks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], ScaleComponent.prototype, "minorTicks", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ScaleComponent.prototype, "min", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ScaleComponent.prototype, "max", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ScaleComponent.prototype, "minorUnit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ScaleComponent.prototype, "majorUnit", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], ScaleComponent.prototype, "reverse", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ScaleComponent.prototype, "rangeSize", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], ScaleComponent.prototype, "rangePlaceholderColor", void 0);

/**
 * A directive that selects a [template]({{ site.data.urls.angular['templatesyntax'] }})
 * within the `<kendo-arcgauge>` component which will be used for the center template
 * ([more information and example]({% slug centertemplate_arcgauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-arcgauge [value]="value">
 *             <ng-template kendoArcGaugeCenterTemplate let-value="value">
 *                 {{ value }}%
 *             </ng-template>
 *         </kendo-arcgauge>
 *
 *     `
 * })
 * export class AppComponent {
 *   public value: number = 10;
 * }
 *
 * ```
 */
let ArcCenterTemplateDirective = class ArcCenterTemplateDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
};
ArcCenterTemplateDirective.ɵfac = function ArcCenterTemplateDirective_Factory(t) { return new (t || ArcCenterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef, 8)); };
ArcCenterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ArcCenterTemplateDirective, selectors: [["", "kendoArcGaugeCenterTemplate", ""]] });
ArcCenterTemplateDirective = __decorate([ __param(0, Optional()),
    __metadata("design:paramtypes", [TemplateRef])
], ArcCenterTemplateDirective);

/* tslint:disable:use-life-cycle-interface */
/**
 * Represents the [Kendo UI ArcGauge component for Angular]({% slug overview_arcgauge_gauges %}).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *      <kendo-arcgauge [value]="value" [scale]="{ max: 100 }">
 *          <ng-template kendoArcGaugeCenterTemplate let-value="value">
 *              {{ value }}%
 *          </ng-template>
 *      </kendo-arcgauge>
 *   `
 * })
 * class AppComponent {
 *   public value: number = 10;
 * }
 *
 * ```
 */
let ArcGaugeComponent = class ArcGaugeComponent extends GaugeComponent {
    constructor(changeDetector, configurationService, themeService, intlService, localizationService, element, renderer, ngZone) {
        super(configurationService, themeService, intlService, localizationService, element, renderer, ngZone);
        this.changeDetector = changeDetector;
        this.className = true;
        this.centerTemplateContext = {};
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.element) {
            this.renderer.setStyle(this.element.nativeElement, 'position', 'relative');
        }
    }
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        if (this.labelElement && !this.centerTemplate) {
            this.changeDetector.detectChanges();
        }
        else if (!this.labelElement && this.centerTemplate) {
            this.updateCenterTemplate();
        }
    }
    /**
     * Exports the ArcGauge as a Drawing `Scene`.
     *
     * @returns {Promise<Group>} - A promise that will be resolved with the export visual.
     */
    exportVisual() {
        return drawDOM(this.element.nativeElement);
    }
    /**
     * Detects the size of the container and redraws the Gauge.
     * Resizing is automatic unless you set the `resizeRateLimit` option to `0`.
     */
    resize() {
        super.resize();
        this.updateCenterTemplate();
    }
    createInstance(element, options, theme, context) {
        this.instance = new ArcGauge(element, options, theme, context);
        this.updateElements();
    }
    updateOptions() {
        super.updateOptions();
        this.updateElements();
    }
    setValues() {
        const value = this.configurationService.readValue();
        this.instance.value(value);
        this.updateCenterTemplate();
    }
    updateElements() {
        this.resizeSensor.acceptSize();
        this.updateCenterTemplate();
    }
    updateCenterTemplate() {
        if (!this.instance || !this.centerTemplate) {
            return;
        }
        this.centerTemplateContext.value = this.instance.value();
        this.centerTemplateContext.color = this.instance.currentColor();
        this.changeDetector.detectChanges();
        this.positionLabel();
    }
    positionLabel() {
        if (!this.labelElement) {
            return;
        }
        const element = this.labelElement.nativeElement;
        const width = element.offsetWidth;
        const height = element.offsetHeight;
        const position = this.instance.centerLabelPosition(width, height);
        element.style.top = `${position.top}px`;
        element.style.left = `${position.left}px`;
    }
    //tslint:disable-next-line: no-empty
    updateSize() {
    }
};
ArcGaugeComponent.ɵfac = function ArcGaugeComponent_Factory(t) { return new (t || ArcGaugeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(ThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IntlService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ArcGaugeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ArcGaugeComponent, selectors: [["kendo-arcgauge"]], contentQueries: function ArcGaugeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ArcCenterTemplateDirective, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centerTemplate = _t.first);
    } }, viewQuery: function ArcGaugeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c1, 1);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelElement = _t.first);
    } }, hostVars: 2, hostBindings: function ArcGaugeComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("k-arcgauge", ctx.className);
    } }, inputs: { value: "value", color: "color", colors: "colors", opacity: "opacity", scale: "scale" }, exportAs: ["kendoArcGauge"], features: [ɵngcc0.ɵɵProvidersFeature([
            ConfigurationService,
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.arcgauge'
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, "k-chart-surface"], ["surface", ""], ["class", "k-arcgauge-label", 4, "ngIf"], [3, "rateLimit", "resize"], [1, "k-arcgauge-label"], ["label", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function ArcGaugeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0, 1);
        ɵngcc0.ɵɵtemplate(2, ArcGaugeComponent_div_2_Template, 3, 2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "kendo-resize-sensor", 3);
        ɵngcc0.ɵɵlistener("resize", function ArcGaugeComponent_Template_kendo_resize_sensor_resize_3_listener($event) { return ctx.onResize($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.centerTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("rateLimit", ctx.resizeRateLimit);
    } }, directives: [ɵngcc3.NgIf, ɵngcc4.ResizeSensorComponent, ɵngcc3.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
__decorate([
    Input(),
    __metadata("design:type", Number)
], ArcGaugeComponent.prototype, "value", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], ArcGaugeComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], ArcGaugeComponent.prototype, "colors", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ArcGaugeComponent.prototype, "opacity", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], ArcGaugeComponent.prototype, "scale", void 0);
__decorate([
    ContentChild(ArcCenterTemplateDirective, { static: false }),
    __metadata("design:type", ArcCenterTemplateDirective)
], ArcGaugeComponent.prototype, "centerTemplate", void 0);
__decorate([
    ViewChild("label", { static: false }),
    __metadata("design:type", ElementRef)
], ArcGaugeComponent.prototype, "labelElement", void 0);
__decorate([
    HostBinding('class.k-arcgauge'),
    __metadata("design:type", Boolean)
], ArcGaugeComponent.prototype, "className", void 0);
ArcGaugeComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef,
        ConfigurationService,
        ThemeService,
        IntlService,
        LocalizationService,
        ElementRef,
        Renderer2,
        NgZone])
], ArcGaugeComponent);

/**
 * The configuration options of the ArcGauge area.
 * Represents the entire visible area of the ArcGauge.
 */
let ArcGaugeAreaComponent = class ArcGaugeAreaComponent extends GaugeAreaComponent {
    constructor(configurationService) {
        super('gaugeArea', configurationService);
        this.configurationService = configurationService;
    }
};
ArcGaugeAreaComponent.ɵfac = function ArcGaugeAreaComponent_Factory(t) { return new (t || ArcGaugeAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
ArcGaugeAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ArcGaugeAreaComponent, selectors: [["kendo-arcgauge-area"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ArcGaugeAreaComponent_Template(rf, ctx) { }, encapsulation: 2 });
ArcGaugeAreaComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], ArcGaugeAreaComponent);

/**
 * The configuration options for the scale of the ArcGauge
 * ([see example]({% slug scaleoptions_arcgauge %})).
 */
let ArcScaleComponent = class ArcScaleComponent extends ScaleComponent {
    constructor(configurationService) {
        super('scale', configurationService);
        this.configurationService = configurationService;
    }
};
ArcScaleComponent.ɵfac = function ArcScaleComponent_Factory(t) { return new (t || ArcScaleComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
ArcScaleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ArcScaleComponent, selectors: [["kendo-arcgauge-scale"]], inputs: { labels: "labels", rangeDistance: "rangeDistance", rangeLineCap: "rangeLineCap", startAngle: "startAngle", endAngle: "endAngle" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ArcScaleComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], ArcScaleComponent.prototype, "labels", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ArcScaleComponent.prototype, "rangeDistance", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], ArcScaleComponent.prototype, "rangeLineCap", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ArcScaleComponent.prototype, "startAngle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ArcScaleComponent.prototype, "endAngle", void 0);
ArcScaleComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], ArcScaleComponent);

/**
 * The configuration options for the scale labels of the RadialGauge.
 */
let RadialLabelsComponent = class RadialLabelsComponent extends LabelsComponent {
    constructor(configurationService) {
        super('scale.labels', configurationService);
        this.configurationService = configurationService;
    }
};
RadialLabelsComponent.ɵfac = function RadialLabelsComponent_Factory(t) { return new (t || RadialLabelsComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
RadialLabelsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialLabelsComponent, selectors: [["kendo-radialgauge-scale-labels"]], inputs: { position: "position" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialLabelsComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], RadialLabelsComponent.prototype, "position", void 0);
RadialLabelsComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], RadialLabelsComponent);

/**
 * The configuration options for the scale labels of the ArcGauge.
 */
let ArcLabelsComponent = class ArcLabelsComponent extends RadialLabelsComponent {
    constructor(configurationService) {
        super(configurationService);
        this.configurationService = configurationService;
        configurationService.set(`${this.key}.visible`, true);
    }
};
ArcLabelsComponent.ɵfac = function ArcLabelsComponent_Factory(t) { return new (t || ArcLabelsComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
ArcLabelsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ArcLabelsComponent, selectors: [["kendo-arcgauge-scale-labels"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ArcLabelsComponent_Template(rf, ctx) { }, encapsulation: 2 });
ArcLabelsComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], ArcLabelsComponent);

/**
 * The configuration options for an ArcGauge color item.
 */
let ColorComponent = class ColorComponent extends CollectionItemComponent {
    constructor(configurationService, collectionChangesService) {
        super(configurationService, collectionChangesService);
    }
};
ColorComponent.ɵfac = function ColorComponent_Factory(t) { return new (t || ColorComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
ColorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColorComponent, selectors: [["kendo-arcgauge-color"]], inputs: { color: "color", opacity: "opacity", from: "from", to: "to" }, features: [ɵngcc0.ɵɵProvidersFeature([ConfigurationService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ColorComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", String)
], ColorComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ColorComponent.prototype, "opacity", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ColorComponent.prototype, "from", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], ColorComponent.prototype, "to", void 0);
ColorComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], ColorComponent);

/**
 * A collection of one or more ArcGauge colors
 * ([more information and example]({% slug colorranges_arcgauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-arcgauge [value]="value">
 *              <kendo-arcgauge-colors>
 *                  <kendo-arcgauge-color *ngFor="let item of colors"
 *                      [from]="item.from" [to]="item.to" [color]="item.color">
 *                  </kendo-arcgauge-color>
 *              </kendo-arcgauge-colors>
 *         </kendo-arcgauge>
 *     `
 * })
 * export class AppComponent {
 *     public value: number = 10;
 *
 *     public colors: any[] = [{
 *         to: 25,
 *         color: '#0058e9'
 *     }, {
 *         from: 25,
 *         to: 50,
 *         color: '#37b400'
 *     }, {
 *         from: 50,
 *         to: 75,
 *         color: '#ffc000'
 *     }, {
 *         from: 75,
 *         color: '#f31700'
 *     }];
 * }
 *
 * ```
 */
let ColorsComponent = class ColorsComponent extends CollectionComponent {
    constructor(configurationService, collectionChangesService) {
        super('colors', configurationService, collectionChangesService);
    }
};
ColorsComponent.ɵfac = function ColorsComponent_Factory(t) { return new (t || ColorsComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
ColorsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColorsComponent, selectors: [["kendo-arcgauge-colors"]], contentQueries: function ColorsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ColorComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([CollectionChangesService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function ColorsComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(ColorComponent),
    __metadata("design:type", QueryList)
], ColorsComponent.prototype, "children", void 0);
ColorsComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], ColorsComponent);

const DIRECTIVES = [ArcGaugeComponent, ArcCenterTemplateDirective, ArcGaugeAreaComponent, ArcScaleComponent, ArcLabelsComponent,
    ColorsComponent, ColorComponent];
/**
 * A [module]({{ site.data.urls.angular['ngmodules'] }}) that includes the ArcGauge component and its directives.
 * Imports the `ArcGaugeModule` into your application
 * [root module]({{ site.data.urls.angular['ngmodules'] }}#angular-modularity) or any other sub-module
 * that will use the ArcGauge component.
 *
 * @example
 * ```ts-no-run
 * import { NgModule } from '@angular/core';
 * import { BrowserModule } from '@angular/platform-browser';
 * import { ArcGaugeModule } from '@progress/kendo-angular-gauges';
 * import { AppComponent } from './app.component';
 *
 * _@NgModule({
 *     bootstrap:    [AppComponent],
 *     declarations: [AppComponent],
 *     imports:      [BrowserModule, ArcGaugeModule]
 * })
 * export class AppModule {
 * }
 * ```
 */
let ArcGaugeModule = class ArcGaugeModule {
};
ArcGaugeModule.ɵfac = function ArcGaugeModule_Factory(t) { return new (t || ArcGaugeModule)(); };
ArcGaugeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ArcGaugeModule });
ArcGaugeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[SharedModule, CommonModule]] });

/**
 * Represents the [Kendo UI LinearGauge component for Angular]({% slug overview_lineargauge_gauges %}).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *      <kendo-lineargauge [pointer]="{ value: value }">
 *      </kendo-lineargauge>
 *   `
 * })
 * class AppComponent {
 *   public value: number = 10;
 * }
 *
 * ```
 */
let LinearGaugeComponent = class LinearGaugeComponent extends GaugeComponent {
    constructor(configurationService, themeService, intlService, localizationService, element, renderer, ngZone) {
        super(configurationService, themeService, intlService, localizationService, element, renderer, ngZone);
    }
    createInstance(element, options, theme, context) {
        this.instance = new LinearGauge(element, options, theme, context);
    }
};
LinearGaugeComponent.ɵfac = function LinearGaugeComponent_Factory(t) { return new (t || LinearGaugeComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(ThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IntlService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
LinearGaugeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearGaugeComponent, selectors: [["kendo-lineargauge"]], inputs: { pointer: "pointer", scale: "scale" }, exportAs: ["kendoLinearGauge"], features: [ɵngcc0.ɵɵProvidersFeature([
            ConfigurationService,
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.lineargauge'
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[1, "k-chart-surface"], ["surface", ""], [3, "rateLimit", "resize"]], template: function LinearGaugeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "kendo-resize-sensor", 2);
        ɵngcc0.ɵɵlistener("resize", function LinearGaugeComponent_Template_kendo_resize_sensor_resize_2_listener($event) { return ctx.onResize($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("rateLimit", ctx.resizeRateLimit);
    } }, directives: [ɵngcc4.ResizeSensorComponent], encapsulation: 2, changeDetection: 0 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], LinearGaugeComponent.prototype, "pointer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LinearGaugeComponent.prototype, "scale", void 0);
LinearGaugeComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        ThemeService,
        IntlService,
        LocalizationService,
        ElementRef,
        Renderer2,
        NgZone])
], LinearGaugeComponent);

/**
 * The configuration options for the LinearGauge area.
 * Represents the entire visible area of the LinearGauge.
 */
let LinearGaugeAreaComponent = class LinearGaugeAreaComponent extends GaugeAreaComponent {
    constructor(configurationService) {
        super('gaugeArea', configurationService);
        this.configurationService = configurationService;
    }
};
LinearGaugeAreaComponent.ɵfac = function LinearGaugeAreaComponent_Factory(t) { return new (t || LinearGaugeAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
LinearGaugeAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearGaugeAreaComponent, selectors: [["kendo-lineargauge-area"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearGaugeAreaComponent_Template(rf, ctx) { }, encapsulation: 2 });
LinearGaugeAreaComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], LinearGaugeAreaComponent);

/**
 * The configuration options for the scale of the LinearGauge
 * ([see example]({% slug scaleoptions_lineargauge %})).
 */
let LinearScaleComponent = class LinearScaleComponent extends ScaleComponent {
    constructor(configurationService) {
        super('scale', configurationService);
        this.configurationService = configurationService;
    }
};
LinearScaleComponent.ɵfac = function LinearScaleComponent_Factory(t) { return new (t || LinearScaleComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
LinearScaleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearScaleComponent, selectors: [["kendo-lineargauge-scale"]], inputs: { line: "line", ranges: "ranges", mirror: "mirror", vertical: "vertical" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearScaleComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], LinearScaleComponent.prototype, "line", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], LinearScaleComponent.prototype, "ranges", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], LinearScaleComponent.prototype, "mirror", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], LinearScaleComponent.prototype, "vertical", void 0);
LinearScaleComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], LinearScaleComponent);

/**
 * The configuration options for the scale labels of the LinearGauge.
 */
let LinearLabelsComponent = class LinearLabelsComponent extends LabelsComponent {
    constructor(configurationService) {
        super('scale.labels', configurationService);
        this.configurationService = configurationService;
    }
};
LinearLabelsComponent.ɵfac = function LinearLabelsComponent_Factory(t) { return new (t || LinearLabelsComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
LinearLabelsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearLabelsComponent, selectors: [["kendo-lineargauge-scale-labels"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearLabelsComponent_Template(rf, ctx) { }, encapsulation: 2 });
LinearLabelsComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], LinearLabelsComponent);

/**
 * The configuration options for a pointer item of a LinearGauge.
 */
let LinearPointerComponent = class LinearPointerComponent extends CollectionItemComponent {
    constructor(configurationService, collectionChangesService) {
        super(configurationService, collectionChangesService);
    }
};
LinearPointerComponent.ɵfac = function LinearPointerComponent_Factory(t) { return new (t || LinearPointerComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
LinearPointerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearPointerComponent, selectors: [["kendo-lineargauge-pointer"]], inputs: { border: "border", color: "color", margin: "margin", opacity: "opacity", shape: "shape", size: "size", value: "value" }, features: [ɵngcc0.ɵɵProvidersFeature([ConfigurationService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearPointerComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], LinearPointerComponent.prototype, "border", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LinearPointerComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LinearPointerComponent.prototype, "margin", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], LinearPointerComponent.prototype, "opacity", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LinearPointerComponent.prototype, "shape", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], LinearPointerComponent.prototype, "size", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], LinearPointerComponent.prototype, "value", void 0);
LinearPointerComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], LinearPointerComponent);

/**
 * A collection of one or more LinearGauge pointers
 * ([more information]({% slug multiplepointers_lineargauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-lineargauge>
 *             <kendo-lineargauge-pointers>
 *                 <kendo-lineargauge-pointer *ngFor="let pointer of pointers"
 *                     [value]="pointer.value" [color]="pointer.color" shape="barIndicator">
 *                 </kendo-lineargauge-pointer>
 *             </kendo-lineargauge-pointers>
 *         </kendo-lineargauge>
 *     `
 * })
 * export class AppComponent {
 *     public pointers: any[] = [{
 *         value: 10,
 *         color: '#ff4500'
 *     }, {
 *         value: 12,
 *         color: '#28b4c8'
 *     }, {
 *         value: 20,
 *         color: '#8b0000'
 *     }];
 * }
 *
 * ```
 */
let LinearPointersComponent = class LinearPointersComponent extends CollectionComponent {
    constructor(configurationService, collectionChangesService) {
        super('pointer', configurationService, collectionChangesService);
    }
};
LinearPointersComponent.ɵfac = function LinearPointersComponent_Factory(t) { return new (t || LinearPointersComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
LinearPointersComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearPointersComponent, selectors: [["kendo-lineargauge-pointers"]], contentQueries: function LinearPointersComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, LinearPointerComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([CollectionChangesService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearPointersComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(LinearPointerComponent),
    __metadata("design:type", QueryList)
], LinearPointersComponent.prototype, "children", void 0);
LinearPointersComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], LinearPointersComponent);

/**
 * The configuration options for a scale range item of a LinearGauge.
 */
let LinearRangeComponent = class LinearRangeComponent extends RangeComponent {
    constructor(configurationService, collectionChangesService) {
        super(configurationService, collectionChangesService);
    }
};
LinearRangeComponent.ɵfac = function LinearRangeComponent_Factory(t) { return new (t || LinearRangeComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
LinearRangeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearRangeComponent, selectors: [["kendo-lineargauge-scale-range"]], features: [ɵngcc0.ɵɵProvidersFeature([ConfigurationService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearRangeComponent_Template(rf, ctx) { }, encapsulation: 2 });
LinearRangeComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], LinearRangeComponent);

/**
 * A collection of one or more LinearGauge scale ranges
 * ([more information and example]({% slug scaleranghes_lineargauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-lineargauge>
 *             <kendo-lineargauge-scale>
 *                 <kendo-lineargauge-scale-ranges>
 *                     <kendo-lineargauge-scale-range *ngFor="let range of ranges"
 *                         [from]="range.from" [to]="range.to" [color]="range.color">
 *                     </kendo-lineargauge-scale-range>
 *                 </kendo-lineargauge-scale-ranges>
 *             </kendo-lineargauge-scale>
 *         </kendo-lineargauge>
 *     `
 * })
 * export class AppComponent {
 *     public ranges: any[] = [{
 *         from: 0,
 *         to: 15,
 *         color: '#ffd246'
 *     }, {
 *         from: 15,
 *         to: 30,
 *         color: '#28b4c8'
 *     }, {
 *         from: 30,
 *         to: 50,
 *         color: '#78d237'
 *     }];
 * }
 *
 * ```
 */
let LinearRangesComponent = class LinearRangesComponent extends CollectionComponent {
    constructor(configurationService, collectionChangesService) {
        super('scale.ranges', configurationService, collectionChangesService);
    }
};
LinearRangesComponent.ɵfac = function LinearRangesComponent_Factory(t) { return new (t || LinearRangesComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
LinearRangesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LinearRangesComponent, selectors: [["kendo-lineargauge-scale-ranges"]], contentQueries: function LinearRangesComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, LinearRangeComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([CollectionChangesService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function LinearRangesComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(LinearRangeComponent),
    __metadata("design:type", QueryList)
], LinearRangesComponent.prototype, "children", void 0);
LinearRangesComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], LinearRangesComponent);

const DIRECTIVES$1 = [LinearGaugeComponent, LinearGaugeAreaComponent, LinearScaleComponent, LinearLabelsComponent,
    LinearPointersComponent, LinearPointerComponent, LinearRangeComponent, LinearRangesComponent];
/**
 * A [module]({{ site.data.urls.angular['ngmodules'] }}) that includes the LinearGauge component and its directives.
 * Imports the `LinearGaugeModule` into your application
 * [root module]({{ site.data.urls.angular['ngmodules'] }}#angular-modularity) or any other sub-module
 * that will use the LinearGauge component.
 *
 * @example
 * ```ts-no-run
 * import { NgModule } from '@angular/core';
 * import { BrowserModule } from '@angular/platform-browser';
 * import { LinearGaugeModule } from '@progress/kendo-angular-gauges';
 * import { AppComponent } from './app.component';
 *
 * _@NgModule({
 *     bootstrap:    [AppComponent],
 *     declarations: [AppComponent],
 *     imports:      [BrowserModule, LinearGaugeModule]
 * })
 * export class AppModule {
 * }
 * ```
 */
let LinearGaugeModule = class LinearGaugeModule {
};
LinearGaugeModule.ɵfac = function LinearGaugeModule_Factory(t) { return new (t || LinearGaugeModule)(); };
LinearGaugeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LinearGaugeModule });
LinearGaugeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[SharedModule]] });

/**
 * Represents the [Kendo UI RadialGauge component for Angular]({% slug overview_radialgauge_gauges %}).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *   selector: 'my-app',
 *   template: `
 *      <kendo-radialgauge [pointer]="{ value: value }">
 *      </kendo-radialgauge>
 *   `
 * })
 * class AppComponent {
 *   public value: number = 10;
 * }
 *
 * ```
 */
let RadialGaugeComponent = class RadialGaugeComponent extends GaugeComponent {
    constructor(configurationService, themeService, intlService, localizationService, element, renderer, ngZone) {
        super(configurationService, themeService, intlService, localizationService, element, renderer, ngZone);
    }
    createInstance(element, options, theme, context) {
        this.instance = new RadialGauge(element, options, theme, context);
    }
};
RadialGaugeComponent.ɵfac = function RadialGaugeComponent_Factory(t) { return new (t || RadialGaugeComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(ThemeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IntlService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LocalizationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
RadialGaugeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialGaugeComponent, selectors: [["kendo-radialgauge"]], inputs: { pointer: "pointer", scale: "scale" }, exportAs: ["kendoRadialGauge"], features: [ɵngcc0.ɵɵProvidersFeature([
            ConfigurationService,
            LocalizationService,
            {
                provide: L10N_PREFIX,
                useValue: 'kendo.radialgauge'
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 1, consts: [[1, "k-chart-surface"], ["surface", ""], [3, "rateLimit", "resize"]], template: function RadialGaugeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "kendo-resize-sensor", 2);
        ɵngcc0.ɵɵlistener("resize", function RadialGaugeComponent_Template_kendo_resize_sensor_resize_2_listener($event) { return ctx.onResize($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("rateLimit", ctx.resizeRateLimit);
    } }, directives: [ɵngcc4.ResizeSensorComponent], encapsulation: 2, changeDetection: 0 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], RadialGaugeComponent.prototype, "pointer", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], RadialGaugeComponent.prototype, "scale", void 0);
RadialGaugeComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        ThemeService,
        IntlService,
        LocalizationService,
        ElementRef,
        Renderer2,
        NgZone])
], RadialGaugeComponent);

/**
 * The configuration options for the RadialGauge area.
 * Represents the entire visible area of the RadialGauge.
 */
let RadialGaugeAreaComponent = class RadialGaugeAreaComponent extends GaugeAreaComponent {
    constructor(configurationService) {
        super('gaugeArea', configurationService);
        this.configurationService = configurationService;
    }
};
RadialGaugeAreaComponent.ɵfac = function RadialGaugeAreaComponent_Factory(t) { return new (t || RadialGaugeAreaComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
RadialGaugeAreaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialGaugeAreaComponent, selectors: [["kendo-radialgauge-area"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialGaugeAreaComponent_Template(rf, ctx) { }, encapsulation: 2 });
RadialGaugeAreaComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], RadialGaugeAreaComponent);

/**
 * The configuration options for the scale of the RadialGauge
 * ([more information and example]({% slug scaleoptions_radialgauge %})).
 */
let RadialScaleComponent = class RadialScaleComponent extends ScaleComponent {
    constructor(configurationService) {
        super('scale', configurationService);
        this.configurationService = configurationService;
    }
};
RadialScaleComponent.ɵfac = function RadialScaleComponent_Factory(t) { return new (t || RadialScaleComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService)); };
RadialScaleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialScaleComponent, selectors: [["kendo-radialgauge-scale"]], inputs: { labels: "labels", rangeDistance: "rangeDistance", ranges: "ranges", startAngle: "startAngle", endAngle: "endAngle" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialScaleComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], RadialScaleComponent.prototype, "labels", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RadialScaleComponent.prototype, "rangeDistance", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], RadialScaleComponent.prototype, "ranges", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RadialScaleComponent.prototype, "startAngle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RadialScaleComponent.prototype, "endAngle", void 0);
RadialScaleComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService])
], RadialScaleComponent);

/**
 * The configuration options for a pointer item of a RadialGauge.
 */
let RadialPointerComponent = class RadialPointerComponent extends CollectionItemComponent {
    constructor(configurationService, collectionChangesService) {
        super(configurationService, collectionChangesService);
    }
};
RadialPointerComponent.ɵfac = function RadialPointerComponent_Factory(t) { return new (t || RadialPointerComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
RadialPointerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialPointerComponent, selectors: [["kendo-radialgauge-pointer"]], inputs: { cap: "cap", color: "color", length: "length", value: "value" }, features: [ɵngcc0.ɵɵProvidersFeature([ConfigurationService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialPointerComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], RadialPointerComponent.prototype, "cap", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], RadialPointerComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RadialPointerComponent.prototype, "length", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], RadialPointerComponent.prototype, "value", void 0);
RadialPointerComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], RadialPointerComponent);

/**
 * A collection of one or more RadialGauge pointers
 * ([more information and example]({% slug multiplepointers_radialgauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-radialgauge>
 *             <kendo-radialgauge-pointers>
 *                 <kendo-radialgauge-pointer *ngFor="let pointer of pointers"
 *                     [value]="pointer.value" [color]="pointer.color">
 *                 </kendo-radialgauge-pointer>
 *             </kendo-radialgauge-pointers>
 *         </kendo-radialgauge>
 *     `
 * })
 * export class AppComponent {
 *     public pointers: any[] = [{
 *         value: 10,
 *         color: '#ffd246'
 *     }, {
 *         value: 20,
 *         color: '#28b4c8'
 *     }, {
 *         value: 30,
 *         color: '#78d237'
 *     }];
 * }
 *
 * ```
 */
let RadialPointersComponent = class RadialPointersComponent extends CollectionComponent {
    constructor(configurationService, collectionChangesService) {
        super('pointer', configurationService, collectionChangesService);
    }
};
RadialPointersComponent.ɵfac = function RadialPointersComponent_Factory(t) { return new (t || RadialPointersComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
RadialPointersComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialPointersComponent, selectors: [["kendo-radialgauge-pointers"]], contentQueries: function RadialPointersComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, RadialPointerComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([CollectionChangesService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialPointersComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(RadialPointerComponent),
    __metadata("design:type", QueryList)
], RadialPointersComponent.prototype, "children", void 0);
RadialPointersComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], RadialPointersComponent);

/**
 * The configuration options for a scale range item of a RadialGauge.
 */
let RadialRangeComponent = class RadialRangeComponent extends RangeComponent {
    constructor(configurationService, collectionChangesService) {
        super(configurationService, collectionChangesService);
    }
};
RadialRangeComponent.ɵfac = function RadialRangeComponent_Factory(t) { return new (t || RadialRangeComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
RadialRangeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialRangeComponent, selectors: [["kendo-radialgauge-scale-range"]], features: [ɵngcc0.ɵɵProvidersFeature([ConfigurationService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialRangeComponent_Template(rf, ctx) { }, encapsulation: 2 });
RadialRangeComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], RadialRangeComponent);

/**
 * A collection of one or more RadialGauge scale ranges
 * ([more information and example]({% slug scaleranghes_radialgauge %})).
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *         <kendo-radialgauge>
 *             <kendo-radialgauge-scale>
 *                 <kendo-radialgauge-scale-ranges>
 *                     <kendo-radialgauge-scale-range *ngFor="let range of ranges"
 *                         [from]="range.from" [to]="range.to" [color]="range.color">
 *                     </kendo-radialgauge-scale-range>
 *                 </kendo-radialgauge-scale-ranges>
 *             </kendo-radialgauge-scale>
 *         </kendo-radialgauge>
 *     `
 * })
 * export class AppComponent {
 *     public ranges: any[] = [{
 *         from: 0,
 *         to: 15,
 *         color: '#ffd246'
 *     }, {
 *         from: 15,
 *         to: 30,
 *         color: '#28b4c8'
 *     }, {
 *         from: 30,
 *         to: 50,
 *         color: '#78d237'
 *     }];
 * }
 *
 * ```
 */
let RadialRangesComponent = class RadialRangesComponent extends CollectionComponent {
    constructor(configurationService, collectionChangesService) {
        super('scale.ranges', configurationService, collectionChangesService);
    }
};
RadialRangesComponent.ɵfac = function RadialRangesComponent_Factory(t) { return new (t || RadialRangesComponent)(ɵngcc0.ɵɵdirectiveInject(ConfigurationService), ɵngcc0.ɵɵdirectiveInject(CollectionChangesService)); };
RadialRangesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RadialRangesComponent, selectors: [["kendo-radialgauge-scale-ranges"]], contentQueries: function RadialRangesComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, RadialRangeComponent, 0);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([CollectionChangesService]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function RadialRangesComponent_Template(rf, ctx) { }, encapsulation: 2 });
__decorate([
    ContentChildren(RadialRangeComponent),
    __metadata("design:type", QueryList)
], RadialRangesComponent.prototype, "children", void 0);
RadialRangesComponent = __decorate([ __metadata("design:paramtypes", [ConfigurationService,
        CollectionChangesService])
], RadialRangesComponent);

const DIRECTIVES$2 = [RadialGaugeComponent, RadialGaugeAreaComponent, RadialScaleComponent, RadialLabelsComponent,
    RadialPointersComponent, RadialPointerComponent, RadialRangeComponent, RadialRangesComponent];
/**
 * A [module]({{ site.data.urls.angular['ngmodules'] }}) that includes the RadialGauge component and its directives.
 * Imports the `RadialGaugeModule` into your application
 * [root module]({{ site.data.urls.angular['ngmodules'] }}#angular-modularity) or any other sub-module
 * that will use the RadialGauge component.
 *
 * @example
 * ```ts-no-run
 * import { NgModule } from '@angular/core';
 * import { BrowserModule } from '@angular/platform-browser';
 * import { RadialGaugeModule } from '@progress/kendo-angular-gauges';
 * import { AppComponent } from './app.component';
 *
 * _@NgModule({
 *     bootstrap:    [AppComponent],
 *     declarations: [AppComponent],
 *     imports:      [BrowserModule, RadialGaugeModule]
 * })
 * export class AppModule {
 * }
 * ```
 */
let RadialGaugeModule = class RadialGaugeModule {
};
RadialGaugeModule.ɵfac = function RadialGaugeModule_Factory(t) { return new (t || RadialGaugeModule)(); };
RadialGaugeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RadialGaugeModule });
RadialGaugeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[SharedModule]] });

/**
 * A [module]({{ site.data.urls.angular['ngmodules'] }}) that includes all Gauge components and directives.
 *
 * Imports the `GaugesModule` into your application
 * [root module]({{ site.data.urls.angular['ngmodules'] }}#angular-modularity) or any other sub-module
 * that will use the Gauge components.
 *
 * @example
 * ```ts-no-run
 * import { NgModule } from '@angular/core';
 * import { BrowserModule } from '@angular/platform-browser';
 * import { GaugesModule } from '@progress/kendo-angular-charts';
 * import { AppComponent } from './app.component';
 *
 * _@NgModule({
 *     bootstrap:    [AppComponent],
 *     declarations: [AppComponent],
 *     imports:      [BrowserModule, GaugesModule]
 * })
 * export class AppModule {
 * }
 * ```
 */
let GaugesModule = class GaugesModule {
};
GaugesModule.ɵfac = function GaugesModule_Factory(t) { return new (t || GaugesModule)(); };
GaugesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GaugesModule });
GaugesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [ArcGaugeModule, LinearGaugeModule, RadialGaugeModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfigurationService, [{
        type: Injectable
    }], function () { return []; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CollectionChangesService, [{
        type: Injectable
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThemeService, [{
        type: Injectable
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, { exports: function () { return [ResizeSensorModule]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedModule, [{
        type: NgModule,
        args: [{
                exports: [ResizeSensorModule],
                providers: [
                    ThemeService
                ]
            }]
    }], null, null); })();




const ɵGaugeAreaComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(GaugeAreaComponent);
const ɵLabelsComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(LabelsComponent);
const ɵRangeComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(RangeComponent);
const ɵScaleComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ScaleComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcCenterTemplateDirective, [{
        type: Directive,
        args: [{
                selector: '[kendoArcGaugeCenterTemplate]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef, decorators: [{
                type: Optional
            }] }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcGaugeComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                exportAs: 'kendoArcGauge',
                providers: [
                    ConfigurationService,
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.arcgauge'
                    }
                ],
                selector: 'kendo-arcgauge',
                template: `
    <div #surface class='k-chart-surface'></div>
    <div class="k-arcgauge-label" *ngIf="centerTemplate" #label>
        <ng-template [ngTemplateOutlet]="centerTemplate.templateRef" [ngTemplateOutletContext]="centerTemplateContext"></ng-template>
    </div>
    <kendo-resize-sensor (resize)="onResize($event)" [rateLimit]="resizeRateLimit"></kendo-resize-sensor>
  `
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ConfigurationService }, { type: ThemeService }, { type: ɵngcc1.IntlService }, { type: ɵngcc2.LocalizationService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }]; }, { className: [{
            type: HostBinding,
            args: ['class.k-arcgauge']
        }], value: [{
            type: Input
        }], color: [{
            type: Input
        }], colors: [{
            type: Input
        }], opacity: [{
            type: Input
        }], scale: [{
            type: Input
        }], centerTemplate: [{
            type: ContentChild,
            args: [ArcCenterTemplateDirective, { static: false }]
        }], labelElement: [{
            type: ViewChild,
            args: ["label", { static: false }]
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcGaugeAreaComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-arcgauge-area',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcScaleComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-arcgauge-scale',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, { labels: [{
            type: Input
        }], rangeDistance: [{
            type: Input
        }], rangeLineCap: [{
            type: Input
        }], startAngle: [{
            type: Input
        }], endAngle: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialLabelsComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-radialgauge-scale-labels',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, { position: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcLabelsComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-arcgauge-scale-labels',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColorComponent, [{
        type: Component,
        args: [{
                providers: [ConfigurationService],
                selector: 'kendo-arcgauge-color',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { color: [{
            type: Input
        }], opacity: [{
            type: Input
        }], from: [{
            type: Input
        }], to: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ColorsComponent, [{
        type: Component,
        args: [{
                providers: [CollectionChangesService],
                selector: 'kendo-arcgauge-colors',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { children: [{
            type: ContentChildren,
            args: [ColorComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ArcGaugeModule, { declarations: function () { return [ArcGaugeComponent, ArcCenterTemplateDirective, ArcGaugeAreaComponent, ArcScaleComponent, ArcLabelsComponent, ColorsComponent, ColorComponent]; }, imports: function () { return [SharedModule, CommonModule]; }, exports: function () { return [ArcGaugeComponent, ArcCenterTemplateDirective, ArcGaugeAreaComponent, ArcScaleComponent, ArcLabelsComponent, ColorsComponent, ColorComponent]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArcGaugeModule, [{
        type: NgModule,
        args: [{
                declarations: [DIRECTIVES],
                exports: [DIRECTIVES],
                imports: [SharedModule, CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearGaugeComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                exportAs: 'kendoLinearGauge',
                providers: [
                    ConfigurationService,
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.lineargauge'
                    }
                ],
                selector: 'kendo-lineargauge',
                template: `
    <div #surface class='k-chart-surface'></div>
    <kendo-resize-sensor (resize)="onResize($event)" [rateLimit]="resizeRateLimit"></kendo-resize-sensor>
  `
            }]
    }], function () { return [{ type: ConfigurationService }, { type: ThemeService }, { type: ɵngcc1.IntlService }, { type: ɵngcc2.LocalizationService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }]; }, { pointer: [{
            type: Input
        }], scale: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearGaugeAreaComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-lineargauge-area',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearScaleComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-lineargauge-scale',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, { line: [{
            type: Input
        }], ranges: [{
            type: Input
        }], mirror: [{
            type: Input
        }], vertical: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearLabelsComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-lineargauge-scale-labels',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearPointerComponent, [{
        type: Component,
        args: [{
                providers: [ConfigurationService],
                selector: 'kendo-lineargauge-pointer',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { border: [{
            type: Input
        }], color: [{
            type: Input
        }], margin: [{
            type: Input
        }], opacity: [{
            type: Input
        }], shape: [{
            type: Input
        }], size: [{
            type: Input
        }], value: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearPointersComponent, [{
        type: Component,
        args: [{
                providers: [CollectionChangesService],
                selector: 'kendo-lineargauge-pointers',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { children: [{
            type: ContentChildren,
            args: [LinearPointerComponent]
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearRangeComponent, [{
        type: Component,
        args: [{
                providers: [ConfigurationService],
                selector: 'kendo-lineargauge-scale-range',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearRangesComponent, [{
        type: Component,
        args: [{
                providers: [CollectionChangesService],
                selector: 'kendo-lineargauge-scale-ranges',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { children: [{
            type: ContentChildren,
            args: [LinearRangeComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LinearGaugeModule, { declarations: [LinearGaugeComponent, LinearGaugeAreaComponent, LinearScaleComponent, LinearLabelsComponent, LinearPointersComponent, LinearPointerComponent, LinearRangeComponent, LinearRangesComponent], imports: [SharedModule], exports: [LinearGaugeComponent, LinearGaugeAreaComponent, LinearScaleComponent, LinearLabelsComponent, LinearPointersComponent, LinearPointerComponent, LinearRangeComponent, LinearRangesComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LinearGaugeModule, [{
        type: NgModule,
        args: [{
                declarations: [DIRECTIVES$1],
                exports: [DIRECTIVES$1],
                imports: [SharedModule]
            }]
    }], null, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialGaugeComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                exportAs: 'kendoRadialGauge',
                providers: [
                    ConfigurationService,
                    LocalizationService,
                    {
                        provide: L10N_PREFIX,
                        useValue: 'kendo.radialgauge'
                    }
                ],
                selector: 'kendo-radialgauge',
                template: `
    <div #surface class='k-chart-surface'></div>
    <kendo-resize-sensor (resize)="onResize($event)" [rateLimit]="resizeRateLimit"></kendo-resize-sensor>
  `
            }]
    }], function () { return [{ type: ConfigurationService }, { type: ThemeService }, { type: ɵngcc1.IntlService }, { type: ɵngcc2.LocalizationService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }]; }, { pointer: [{
            type: Input
        }], scale: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialGaugeAreaComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-radialgauge-area',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialScaleComponent, [{
        type: Component,
        args: [{
                selector: 'kendo-radialgauge-scale',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }]; }, { labels: [{
            type: Input
        }], rangeDistance: [{
            type: Input
        }], ranges: [{
            type: Input
        }], startAngle: [{
            type: Input
        }], endAngle: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialPointerComponent, [{
        type: Component,
        args: [{
                providers: [ConfigurationService],
                selector: 'kendo-radialgauge-pointer',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { cap: [{
            type: Input
        }], color: [{
            type: Input
        }], length: [{
            type: Input
        }], value: [{
            type: Input
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialPointersComponent, [{
        type: Component,
        args: [{
                providers: [CollectionChangesService],
                selector: 'kendo-radialgauge-pointers',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { children: [{
            type: ContentChildren,
            args: [RadialPointerComponent]
        }] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialRangeComponent, [{
        type: Component,
        args: [{
                providers: [ConfigurationService],
                selector: 'kendo-radialgauge-scale-range',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, null); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialRangesComponent, [{
        type: Component,
        args: [{
                providers: [CollectionChangesService],
                selector: 'kendo-radialgauge-scale-ranges',
                template: ''
            }]
    }], function () { return [{ type: ConfigurationService }, { type: CollectionChangesService }]; }, { children: [{
            type: ContentChildren,
            args: [RadialRangeComponent]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RadialGaugeModule, { declarations: [RadialGaugeComponent, RadialGaugeAreaComponent, RadialScaleComponent, RadialLabelsComponent, RadialPointersComponent, RadialPointerComponent, RadialRangeComponent, RadialRangesComponent], imports: [SharedModule], exports: [RadialGaugeComponent, RadialGaugeAreaComponent, RadialScaleComponent, RadialLabelsComponent, RadialPointersComponent, RadialPointerComponent, RadialRangeComponent, RadialRangesComponent] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadialGaugeModule, [{
        type: NgModule,
        args: [{
                declarations: [DIRECTIVES$2],
                exports: [DIRECTIVES$2],
                imports: [SharedModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GaugesModule, { exports: [ArcGaugeModule, LinearGaugeModule, RadialGaugeModule] }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GaugesModule, [{
        type: NgModule,
        args: [{
                exports: [ArcGaugeModule, LinearGaugeModule, RadialGaugeModule]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SharedModule, ArcGaugeModule, LinearGaugeModule, RadialGaugeModule, GaugesModule, CollectionComponent, CollectionItemComponent, GaugeComponent, GaugeAreaComponent, LabelsComponent, RangeComponent, ScaleComponent, SettingsComponent, ConfigurationService, CollectionChangesService, ThemeService, ArcGaugeComponent, ArcGaugeAreaComponent, ArcScaleComponent, ArcLabelsComponent, ArcCenterTemplateDirective, ColorsComponent, ColorComponent, LinearGaugeComponent, LinearGaugeAreaComponent, LinearScaleComponent, LinearLabelsComponent, LinearPointersComponent, LinearPointerComponent, LinearRangeComponent, LinearRangesComponent, RadialGaugeComponent, RadialGaugeAreaComponent, RadialScaleComponent, RadialLabelsComponent, RadialPointersComponent, RadialPointerComponent, RadialRangeComponent, RadialRangesComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,