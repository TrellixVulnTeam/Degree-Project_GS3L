{"version":3,"file":"angular2-weather-widget.js","sources":["angular2-weather-widget/lib/config.ts","angular2-weather-widget/lib/angular-weather-widget.service.ts","angular2-weather-widget/lib/angular-weather-widget.component.ts","angular2-weather-widget/lib/angular-weather-widget.module.ts"],"names":[],"mappings":"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","sourcesContent":["export const API = 'https://api.openweathermap.org/data/2.5/weather?';\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { API } from './config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularWeatherWidgetService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getWeatherDetails(isGeoLocation, location, APIKEY) : Observable <any> {\r\n    if(isGeoLocation){\r\n      return this.http.get(`${API}${location}&units=imperial&appid=${APIKEY}`);\r\n    }else{\r\n      return this.http.get(`${API}q=${location}&units=imperial&appid=${APIKEY}`);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AngularWeatherWidgetService } from './angular-weather-widget.service';\r\n@Component({\r\n  selector: 'angular-weather-widget',\r\n  templateUrl: 'angular-weather-widget.component.html',\r\n  styleUrls: ['angular-weather-widget.component.scss']\r\n})\r\nexport class AngularWeatherWidgetComponent implements OnInit {\r\n  @Input() APIKEY: any;\r\n  @Input() height: string = 'auto';\r\n  @Input() width: string = '425px';\r\n  @Input() backgroundColor: string = 'rgb(10 10 111)';\r\n  @Input() isBoxShadow: boolean = true;\r\n  @Input() borderRadius: string = '5px';\r\n  @Input() locationFontSize: string = '40px';\r\n  @Input() locationFontColor: string = '#fff';\r\n  @Input() status: boolean = true;\r\n  @Input() statusFontColor: string = '#fff';\r\n  @Input() statusFontSize: String = '18px';\r\n  @Input() temperature: Boolean = true;\r\n  @Input() tempratureFontColor: string = '#fff';\r\n  @Input() tempratureFontSize: string = '80px';\r\n  @Input() weatherImages: boolean = true;\r\n  @Input() weatherImageWidth: string = '100px';\r\n  @Input() weatherImageHeight: string = '100px';\r\n  @Input() geoLocation: boolean = false;\r\n  @Input() location: any = '';\r\n  @Input() isWind: boolean = true;\r\n  @Input() isHumidity: boolean = true;\r\n  @Input() windFontColor: string = '#fff';\r\n  @Input() windFontSize: string = '20px';\r\n  @Input() humidityFontColor: string = '#fff';\r\n  @Input() humidityFontSize: string = '20px';\r\n  isLoading: boolean = true;\r\n  weatherDetails = {\r\n    location : '',\r\n    weather_descriptions: '',\r\n    temperature: '',\r\n    icon: '',\r\n    wind_speed: '',\r\n    humidity: ''\r\n  };\r\n  constructor(public ws: AngularWeatherWidgetService) { }\r\n\r\n  ngOnInit() {\r\n    this.checkLocation();\r\n  }\r\n\r\n  /**\r\n   *@description Check whether geolocation or manually added location.\r\n   */\r\n\r\n  checkLocation() {\r\n    if (this.geoLocation) {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          var lat = position.coords.latitude;\r\n          var long = position.coords.longitude;\r\n          this.location = `lat=${lat}&lon=${long}`;\r\n          this.getWeather(true);\r\n        }, (error) => {\r\n          console.warn(error.message);\r\n        });\r\n      } else {\r\n        console.warn(`It seems like Geolocation, which is required for this page, is not enabled in your browser.\r\n        Please use a browser which supports it.`);\r\n      }\r\n    } else if (!this.geoLocation && this.location.length < 1) {\r\n      console.warn('Provide  a valid location');\r\n    } else {\r\n      this.getWeather(false);\r\n    }\r\n  }\r\n\r\n  getWeather(isGeoLocation) {\r\n    if (this.APIKEY) {\r\n      this.ws.getWeatherDetails(isGeoLocation,this.location, this.APIKEY).subscribe(response => {\r\n        this.weatherDetails = {\r\n          location : response.name,\r\n          weather_descriptions: response.weather[0].description,\r\n          temperature: response.main.temp,\r\n          icon: `http://openweathermap.org/img/wn/${response.weather[0].icon}@2x.png`,\r\n          wind_speed: response.wind.speed,\r\n          humidity: response.main.humidity\r\n        };\r\n        this.isLoading = false;\r\n      }, err => {\r\n        console.warn(err.error.error.message);\r\n      })\r\n    } else {\r\n      console.warn('Invalid APIKEY');\r\n    }\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularWeatherWidgetComponent } from './angular-weather-widget.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularWeatherWidgetService } from './angular-weather-widget.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [AngularWeatherWidgetComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [AngularWeatherWidgetComponent],\r\n  providers: [AngularWeatherWidgetService]\r\n})\r\nexport class AngularWeatherWidgetModule { }\r\n"]}