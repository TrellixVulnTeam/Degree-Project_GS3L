import { OnInit } from '@angular/core';
import { AngularWeatherWidgetService } from './angular-weather-widget.service';
import * as ɵngcc0 from '@angular/core';
export declare class AngularWeatherWidgetComponent implements OnInit {
    ws: AngularWeatherWidgetService;
    APIKEY: any;
    height: string;
    width: string;
    backgroundColor: string;
    isBoxShadow: boolean;
    borderRadius: string;
    locationFontSize: string;
    locationFontColor: string;
    status: boolean;
    statusFontColor: string;
    statusFontSize: String;
    temperature: Boolean;
    tempratureFontColor: string;
    tempratureFontSize: string;
    weatherImages: boolean;
    weatherImageWidth: string;
    weatherImageHeight: string;
    geoLocation: boolean;
    location: any;
    isWind: boolean;
    isHumidity: boolean;
    windFontColor: string;
    windFontSize: string;
    humidityFontColor: string;
    humidityFontSize: string;
    isLoading: boolean;
    weatherDetails: {
        location: string;
        weather_descriptions: string;
        temperature: string;
        icon: string;
        wind_speed: string;
        humidity: string;
    };
    constructor(ws: AngularWeatherWidgetService);
    ngOnInit(): void;
    /**
     *@description Check whether geolocation or manually added location.
     */
    checkLocation(): void;
    getWeather(isGeoLocation: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularWeatherWidgetComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AngularWeatherWidgetComponent, "angular-weather-widget", never, { "height": "height"; "width": "width"; "backgroundColor": "backgroundColor"; "isBoxShadow": "isBoxShadow"; "borderRadius": "borderRadius"; "locationFontSize": "locationFontSize"; "locationFontColor": "locationFontColor"; "status": "status"; "statusFontColor": "statusFontColor"; "statusFontSize": "statusFontSize"; "temperature": "temperature"; "tempratureFontColor": "tempratureFontColor"; "tempratureFontSize": "tempratureFontSize"; "weatherImages": "weatherImages"; "weatherImageWidth": "weatherImageWidth"; "weatherImageHeight": "weatherImageHeight"; "geoLocation": "geoLocation"; "location": "location"; "isWind": "isWind"; "isHumidity": "isHumidity"; "windFontColor": "windFontColor"; "windFontSize": "windFontSize"; "humidityFontColor": "humidityFontColor"; "humidityFontSize": "humidityFontSize"; "APIKEY": "APIKEY"; }, {}, never, never>;
}

//# sourceMappingURL=angular-weather-widget.component.d.ts.map