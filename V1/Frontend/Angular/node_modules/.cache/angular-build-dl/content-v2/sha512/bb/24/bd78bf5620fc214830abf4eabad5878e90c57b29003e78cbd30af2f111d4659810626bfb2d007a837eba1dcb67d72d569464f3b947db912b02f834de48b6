{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\n\n//From ex\nimport { ApiService } from '../services/api.service'; \n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  //From Ex\n  providers: [ApiService]\n})\nexport class HomeComponent implements OnInit {\n  \n  //Logic for handeling event of a logout\n  @Output() isLogout = new EventEmitter<void>()\n  constructor(public firebaseService: FirebaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  //Logout method\n  logout(){\n    this.firebaseService.logout()\n    this.isLogout.emit()\n  }\n}\n\n//This section deals with pullling data from backend. This example just loads random movies\nexport class AppComponent {\n  movies = [{title: 'Titanic'}];\n\n  constructor(private api:ApiService){\n    this.getMovies();\n\n  }\n  //Function for getting it from API\n  //So confusing\n  getMovies = () => {\n\n    this.api.getAllMovies().subscribe(\n      data => {\n        this.movies = data\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n}\n","<!--  -->\n<h2>Movie Listing Test!</h2>\n<ul>\n  <!-- *ngFor is for accessing component data in angular -->\n  <!--\n  <li *ngFor=\"let movie of movies\">\n    <h1>{{movie.title}}</h1>\n  </li>\n-->\n</ul>\n\n<!-- Added from previous example -->\n<button (click)=\"logout()\">Logout</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \n  firebase: {\n    apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n    authDomain: \"helius-70808.firebaseapp.com\",\n    projectId: \"helius-70808\",\n    storageBucket: \"helius-70808.appspot.com\",\n    messagingSenderId: \"475929370500\",\n    appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n    measurementId: \"G-SWCJ32CMDT\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //URL of django sever\n  baseurl = 'http://127.0.0.1:8000';\n\n  //Headers for HTTP\n  httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient) { }\n\n  //function for getting movie data from django\n  getAllMovies(): Observable<any>{\n    return this.http.get(this.baseurl + '/movies/', \n    {headers: this.httpHeaders});\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n//These are sevices we use to connect to stuff\n//Taken from the services folder\nimport { FirebaseService } from './services/firebase.service';\nimport { ApiService } from './services/api.service'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ApiService]\n})\n\nexport class AppComponent implements OnInit {\n\n  //Variable declerations\n  title = 'helius';\n  isSignedIn = false;\n  movies = [{title: 'Titanic'}];\n\n  //constructor(private api:ApiService){ \n  //  ;this.getMovies()\n\n  //}\n\n     //TODO\n    //- Cant target services file\n  getMovies = () => {\n\n    \n    this.api.getAllMovies().subscribe(\n      data => {\n        this.movies = data\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n  //Initializes firebase\n  constructor(public firebaseService : FirebaseService, private api:ApiService ){}\n  ngOnInit(){\n\n    //Checking if user is signed in\n    if(localStorage.getItem('user')!== null)\n    this.isSignedIn = true\n    else\n    this.isSignedIn = false\n\n    ;this.getMovies()\n  }\n\n  //Handles signup functionality\n  async onSignup(email: string, password:string){\n    await this.firebaseService.signup(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Handles signin functionality\n  async onSignin(email: string, password:string){\n    await this.firebaseService.signin(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Logout functionality\n  handleLogout(){\n    this.isSignedIn = false\n  }\n\n  \n\n}\n","<!--This is the main HTML of the Login Page-->\n<div>\n  <h1>Welcome to Helius!</h1>\n</div>\n\n<!--This is from movie example for testing\n\nTODO\n- not reading the data from django\n-->\n\n<div>\n  <h2>Movie Listing Test!</h2>\n<ul>\n  <!-- *ngFor is for accessing component data in angular -->\n  <li *ngFor=\"let movie of movies\">\n    <h1>{{movie.title}}</h1>\n  </li>\n</ul>\n</div>\n\n\n<!--Sign up functionality\nTODO\n- not working at all\n-->\n\n<!-- \n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign Up</h2>\n  <input type=\"text\" #emailSignup/>\n  <input type=\"text\" #passwordSignup/>\n  <button (click)=\"onSignup(emailSignup.value,passwordSignup.value)\">Sign Up</button>\n</div>\n-->\n<!--Sign in functionality\nTODO\n- password not hidden\n-->\n\n<hr>\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign In</h2>\n  <input type=\"text\" value=\"test@helius.com\" #email/>\n  <input type=\"text\" value=\"123456\" #password/>\n  <button (click)=\"onSignin(email.value,password.value)\">Sign In</button>\n</div>\n\n\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogout()\"></app-home>\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn = false;\n  constructor(public firebaseAuth: AngularFireAuth) { }\n\n  //Authenticating with firebase email and login\n  async signin(email : string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  //Signining up with firebase auth\n  async signup(email : string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//Added for firebase use\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\nimport { HomeComponent } from './home/home.component';\nimport { FirebaseService } from './services/firebase.service';\n\n//Added fro htttp connections connection\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    //Firebase setup\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n      authDomain: \"helius-70808.firebaseapp.com\",\n      projectId: \"helius-70808\",\n      storageBucket: \"helius-70808.appspot.com\",\n      messagingSenderId: \"475929370500\",\n      appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n      measurementId: \"G-SWCJ32CMDT\"\n    }),\n\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n\n    //For HTTP connecting\n    HttpClientModule\n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}