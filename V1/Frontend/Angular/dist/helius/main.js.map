{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  //Logic for handeling event of a logout\n  @Output() isLogout = new EventEmitter<void>()\n  constructor(public firebaseService: FirebaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    this.firebaseService.logout()\n    this.isLogout.emit()\n  }\n\n}\n","<p>Wow you made it!</p>\n<button (click)=\"logout()\">Logout</button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  \n  firebase: {\n    apiKey: \"AIzaSyACqLx1Hwj0sZ7OWWo7LpgQyYpTHiwgNqY\",\n    authDomain: \"helius-70808.firebaseapp.com\",\n    projectId: \"helius-70808\",\n    storageBucket: \"helius-70808.appspot.com\",\n    messagingSenderId: \"475929370500\",\n    appId: \"1:475929370500:web:cf04f39d3a9d487d9d07d1\",\n    measurementId: \"G-SWCJ32CMDT\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from './services/firebase.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'helius';\n  isSignedIn = false\n\n  //Initializes firebase\n  constructor(public firebaseService : FirebaseService){}\n  ngOnInit(){\n\n    //Checking if user is signed in\n    if(localStorage.getItem('user')!== null)\n    this.isSignedIn = true\n    else\n    this.isSignedIn = false\n  }\n\n  //Handles signup functionality\n  async onSignup(email: string, password:string){\n    await this.firebaseService.signup(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Handles signin functionality\n  async onSignin(email: string, password:string){\n    await this.firebaseService.signup(email,password)\n    if(this.firebaseService.isLoggedIn)\n    this.isSignedIn = true\n  }\n\n  //Logout functionality\n  handleLogout(){\n    this.isSignedIn = false\n  }\n\n}\n","<!--This is the main HTML of the page-->\n<div>\n  <h1>Welcome to Helius!</h1>\n</div>\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign Up</h2>\n  <input type=\"text\" #emailSignup/>\n  <input type=\"text\" #passwordSignup/>\n  <button (click)=\"onSignup(emailSignup.value,passwordSignup.value)\">Sign Up</button>\n</div>\n<hr>\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign In</h2>\n  <input type=\"text\" #email/>\n  <input type=\"text\" #password/>\n  <button (click)=\"onSignin(email.value,password.value)\">Sign In</button>\n</div>\n\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogout()\"></app-home>\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn = false;\n  constructor(public firebaseAuth: AngularFireAuth) { }\n\n  //Authenticating with firebase email and login\n  async signin(email : string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  //Signining up with firebase auth\n  async signup(email : string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//Added for firebase use\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFireDatabaseModule } from \"@angular/fire/database\";\n\nimport { environment } from '../environments/environment';\nimport { HomeComponent } from './home/home.component';\nimport { FirebaseService } from './services/firebase.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\n    //Firebase inititlization\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule\n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}